{"version":3,"sources":["images/degreeMeLogo.svg","images/degreeMeHashTag.svg","GlobalFunctions/FormatDate.js","components/Notification.js","components/NotificationList.js","GlobalFunctions/HTMLDecode.js","components/UserMenu.js","components/AutocompleteItem.js","components/SearchBar.js","components/Header.js","components/ProgressBar.js","components/TagsInput.js","components/VideoUploadModal.js","components/KeyWordsInput.js","components/Select-SubscriptionItem.js","components/Subscriptions.js","components/CreateAccount.js","components/CreateSellerAccount.js","components/VideoUploader.js","components/Video.js","components/VideoRow.js","components/EarningsChart.js","components/PercentageOfViewsPieChart.js","components/CreatorDashboard.js","components/Home.js","components/Login.js","components/CommentInput.js","components/Comment.js","components/CreateAccountModal.js","components/CommentList.js","components/VideoActions.js","images/Video_Sub.svg","components/UpgradeAccount.js","components/SingleVideo.js","components/VideoList.js","components/ReviewModal.js","components/Review.js","components/ReviewsList.js","components/User.js","components/AvatarCropper.js","components/Settings.js","components/Footer.js","components/LikedVideos.js","components/SearchResultVideo.js","images/NoResults.svg","components/SearchResults.js","images/visa.svg","components/PaymentCard.js","components/AddPaymentMethod.js","components/Subscription_Item.js","components/PaymentSettings.js","images/person1.svg","images/person2.svg","images/person3.svg","images/person4.svg","images/person5.svg","images/students-studying.svg","components/LandingPage.js","components/ForgotPassword.js","components/UpdatePassword.js","components/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["FormatDate","date","dateArray","toString","split","todayArray","Date","monthArray","month","x","length","includes","newDate","timeArray","minutes","hours","intHours","parseInt","amPm","difference","Math","abs","secDifference","minDifference","hourDifference","dayDifference","formatDate","Notification","props","isUnread","bind","this","isRead","className","style","backgroundColor","onClick","hideMenu","to","VideoId","src","userImage","alt","name","message","displayTimeSince","Component","NotificationList","toggleUserMenu","logout","state","notifications","Cookies","remove","type","map","video","index","Author_Image","Author_First_Name","Author_Last_Name","Message","Viewed","xmlns","width","height","fill","viewBox","d","user","_id","fillRule","htmlDecode","input","e","document","createElement","innerHTML","childNodes","nodeValue","replace","HTMLDecode","UserMenu","showNotifications","menuTitle","showUnreadCount","toggleNotifications","toggleAccount","wrapperRef","React","createRef","handleClickOutside","isLoggedIn","readNotifications","event","current","contains","target","setState","hideUnreadCount","getNotifications","addEventListener","removeEventListener","Subscription_Level","text","JSON","parse","error","content","Image","display","showNotificationBadge","notificationCount","console","log","undefined","postBody","user_id","requestMetadata","method","headers","body","stringify","fetch","then","res","json","result","ref","showUpgradeButton","AutocompleteItem","hideAutocomplete","videoId","SearchBar","showAutocomplete","autocomplete","searchText","redirect","search","handleSearchOnEnter","redirectToResults","alert","searchValue","autocompleteText","value","setSearchValue","key","push","autoComplete","placeholder","onChange","onKeyPress","Title","emptyText","Header","history","desktopLogo","mobileLogo","renderLogo","setUser","handleAutocompleteChange","withRouter","ProgressBar","calculateProgressWidth","progress","computedClassName","show","id","round","TagsInput","tag","addTag","tags","removeTag","VideoUploadModal","Modal","centered","isOpen","onHide","hideModal","Body","Thumbnail","Creator","Description","copyToClipboard","Footer","KeyWordsInput","keywords","keyword","addKeyword","renderYourKeywordsText","removeKeyword","SubscriptionItem","subscription_level","selected","htmlFor","border","description","price","selectSubscription","Subscriptions","freeTierSelected","proTierSelected","hideCardInput","showCardInput","ReactGA","initialize","CreateAccount","validateStripeCard","elements","getElement","CardElement","on","complete","cardComplete","handleSubmit","stripe","a","paymentSubmitted","cardElement","createPaymentMethod","card","paymentMethod","createAccount","first_name","last_name","email","password","showError","errorClass","subscription","stripePromise","loadStripe","agreedToTerms","handlePasswordChange","handleEmailChange","handleFirstNameChange","handleLastNameChange","hideError","setError","renderCard","setSubscription","checkAllFieldsComplete","setAgreedToTerms","checked","test","String","toLowerCase","options","base","fontSize","color","invalid","disabled","isEmail","validateEmail","First_Name","Last_Name","Email","Password","Keywords","Subscription","PaymentMethodId","category","action","newArray","concat","splice","sub","CreateSellerAccount","dob","street_number","postal_code","city","country","phone","ssn","routing_number","account_number","formComplete","formSubmitted","success","createStripeAccount","createStateDropdown","handleStreetNumberChange","handleStateChange","handlePostalChange","handleCityChange","handleDOBChange","handleSSNChange","handleRoutingChange","handleAccountChange","showLoader","isNaN","get","account","raw","catch","err","defaultValue","href","rel","inputStyle","showSuccess","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","VideoUploader","isModalOpen","uploadProgress","uploading","thumbnail","title","uploadType","showDescCharCount","showTitleCharCount","titleCharLimit","descCharLimit","titleCharCount","descCharCount","filename","handleChange","readImage","addVideo","setFileName","createThumbnail","postThumbnailToFirebase","showModal","handleTitleChange","handleDescriptionChange","showTitleChar","showDescChar","hideTitleChar","hideDescChar","renderUploader","Link","context","exec","trim","Promise","resolve","reject","Video","files","getThumbnails","thumbnails","reader","FileReader","blob","readAsDataURL","url","videoUrl","Creator_Id","file","uuid","storageRef","storage","put","snapshot","bytesTransferred","totalBytes","getDownloadURL","addVideoToDatabase","uploadingMedia","validMp4","validateMp4","hasBankAccount","creator","onFocus","onBlur","image","navigator","clipboard","writeText","window","location","decode","HtmlDecode","showPlayIcon","hidePlayIcon","onMouseOut","onMouseOver","Views","VideoRow","getVideos","videos","isMounted","api_route","response","Id","Creator_Image","renderVideoRow","EarningsChart","dataList","getCreatorPayouts","getPrevSixMonths","setData","labels","labelColor","datasets","data","borderColor","months","thisMonth","getMonth","i","plugins","ChartDataLabels","animation","duration","layout","padding","right","tooltips","callbacks","label","tooltipItem","yLabel","legend","datalabels","anchor","align","clamp","clip","font","size","weight","formatter","toFixed","scales","borderWidth","grid","y","min","opacity","PercentageOfViewsPieChart","hoverBackgroundColor","percentage","getChartData","offset","strokeColor","dataIndex","CreatorDashboard","allViews","viewsThisMonth","percentageOfTotalViews","totalEarnings","getCreatorTotalViewCount","getTotalEarnings","renderCreatorDashboard","Home","getKeywords","Word","renderVideoRows","LoginForm","login","renderLoggedIn","getUnreadCount","CommentInput","borderBottom","showButtons","HandleCommentChange","Comment","CancelComment","AddComment","displayDate","CreateAccountModal","CommentList","comments","comment","addComment","handleCommentChange","cancelComment","getComments","Video_Id","User_Id","newCommentsArray","unshift","prevProps","Author_Img","VideoActions","showLikedMsg","addLike","Likes","UpgradeAccount","hasDefault","addSubscription","loading","loadStarted","progressText","submitPaymentMethod","containsInUsePaymentMethod","customer","showProcessText","renderUpgradeContent","getStripeCustomer","UserId","invoice_settings","default_payment_method","limit_message","Video_Sub","renderCardInput","SingleVideo","likeCount","viewText","secondsStartTime","secondsEndTime","videoLoaded","getVideo","addView","startTime","endTime","setUserState","renderVideo","mounted","setTimeout","userId","CreatorId","views","deletedCount","match","params","timeDiff","seconds","updateSecondsViewed","secondsToAdd","Free_Tier_Seconds","onDuration","controls","playing","onPlay","onPause","UserVideos","getUserVideos","ReviewModal","rating","reviewMsgColor","showReviewMsg","reviewMsg","addReview","handleMessageChange","handleRatingChange","Rating","htmlDecoder","Review","stars","Name","star","ReviewsList","reviews","getUserReviews","review","User","videosBorder","reviewsBorder","handleContentChange","getUser","VideoList","Videos","bio","Bio","renderContent","AvatarCropper","showUploadingText","uploadingText","base64ImageToBlob","preview","contentType","postImageToDB","showPreview","onCrop","onClose","onBeforeFileLoad","str","pos","indexOf","substring","b64","substr","imageContent","atob","buffer","ArrayBuffer","view","Uint8Array","n","charCodeAt","Blob","elem","avatar","Settings","showBioSuccess","updateBio","handleBioChange","showBioSuccessMessage","renderUpgradeBtn","createBioForm","getFullYear","LikedVideos","getLikedVideos","SearchResults","searchLabel","noResults","getVideosFromSearchValue","renderResults","setSearchLabel","showNoResults","render","NoResultsImage","shortenVideoDescription","convertQueryString","PaymentCard","isCardPopoverOpen","brand","Visa_SVG","showCardLogo","last4","exp_month","exp_year","toggleCardPopover","Popover","positions","updateDefaultPaymentMethod","removePaymentMethod","currIndex","AddPaymentMethod","disableCardButton","clear","createCard","getStripePaymentMethods","setContainsNoPaymentMethod","Subscription_Item","isPopoverOpen","cancelSubscription","subscription_id","showRemoveSubLoader","getStripeSubscriptions","hideRemoveSubLoader","plan","amount","interval","togglePopover","PaymentSettings","paymentMethods","subscriptions","payments","upcomingPayments","subscriptionLoading","cardLoading","subscriptionLoadingText","containsNoPaymentMethod","disableSubButton","getPastTransactions","renderPayments","renderUpcomingPayments","renderPaymentSettings","getUpcomingPayments","showSubscriptionLoader","setCardLoading","showCards","checkIfDefaultExists","paymentMethodId","status","defaultExists","showCardError","formatCards","payment","created","period","start","showSubscriptions","LandingPage","person1","person2","person3","person4","person5","version","studentsStudying","ForgotPassword","generateResetPWLink","UpdatePassword","confirmPassword","reqIdExists","passwordMessageColor","passwordMessage","handlePwChange","confirmPwChange","updatePassword","getUpdateRequestById","request_id","req_id","renderUpdatePassword","Routes","updateAvatar","getNotificationCount","set","secure","sameSite","unreadCount","word","exact","path","getKeyWords","addKeyWord","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0cedeec6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/degreeMeLogo.6ee69b6c.svg\";","export default __webpack_public_path__ + \"static/media/degreeMeHashTag.acec1592.svg\";","class FormatDate  {\ndisplayDate(date) {\n    var dateArray = date.toString().split(\" \");\n    var todayArray = new Date().toString().split(\" \");\n    var monthArray = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    var month = \"\";\n    for (var x = 0; x < monthArray.length; x++) {\n      if (monthArray[x].includes(dateArray[1])) {\n        month = monthArray[x];\n      }\n    }\n    if (todayArray[1] === dateArray[1] & todayArray[2] === dateArray[2]) {\n      return \"Today\";\n    } else if (month === \"\") {\n      return \"\";\n    } else {\n    if(dateArray[2].split(\"\")[0] === \"0\"){\n      return month + \" \" +dateArray[2].split(\"\")[1];\n    }\n    else{\n      return month + \" \" + dateArray[2];\n    }\n    }\n  }\n  //takes date object as parameter\n  formatTimeFromDate(date) {\n    var newDate = new Date(date)\n    newDate = newDate.toString().split(\" \");\n    var timeArray = newDate[4].split(\":\");\n    var minutes = timeArray[1];\n    var hours = timeArray[0];\n    var intHours = parseInt(hours);\n    var amPm = \"\";\n    if (intHours === 12) {\n      hours = 12;\n      amPm = \"AM\";\n    } else if (intHours === 0) {\n      hours = 12;\n      amPm = \"PM\";\n    } else if (intHours < 12) {\n    if(intHours<10){\n        hours = intHours;\n      }\n      amPm = \"AM\";\n    } else {\n      hours = hours % 12;\n      amPm = \"PM\";\n    }\n    return hours + \":\" + minutes + \" \" + amPm;\n  }\n  displayTimeSince(date) {\n    var difference = Math.abs(new Date() - (new Date(date)));\n    var secDifference = parseInt(difference / 1000);\n    var minDifference = parseInt(secDifference / 60);\n    var hourDifference = parseInt(minDifference / 60);\n    var dayDifference = parseInt(hourDifference / 24);\n    if(secDifference < 60){\n        return secDifference + \" seconds ago\";\n    }\n    else if(secDifference < 120){\n        return minDifference + \" minute ago\";\n    }\n    else if(secDifference > 60 && minDifference < 60){\n        return minDifference + \" minutes ago\";\n    }\n    else if(minDifference < 120){\n        return hourDifference + \" hour ago\";\n    }\n    else if(minDifference > 120 && hourDifference < 24){\n        return hourDifference + \" hours ago\";\n    }\n    else if(hourDifference < 48){\n        return dayDifference + \" day ago\";\n    }\n    else{\n        return dayDifference + \" days ago\";\n    }\n  }\n  \n}\nexport default FormatDate;","import React, { Component } from \"react\";\nimport '../css/Notification.css';\nimport FormatDate from \"../GlobalFunctions/FormatDate\";\nimport { Link } from 'react-router-dom';\n\nvar formatDate = new FormatDate()\nclass Notification extends Component {\n    constructor(props) {\n        super(props);\n        this.isUnread = this.isUnread.bind(this)\n    }\n    isUnread(){\n        if(this.props.isRead){\n            return(\n                <p className=\"unread\" style={{backgroundColor: \"#1b1e23\"}}></p>\n            );\n        }\n        else {\n            return(\n                <p className=\"unread\" style={{backgroundColor: \"#007bff\"}}></p>\n            );\n        }\n        \n    }\n    render() {\n        return (\n            <div className=\"notification-item\" onClick={this.props.hideMenu} >\n                <Link to={\"/Video/\"+this.props.VideoId}>\n                <ul className=\"notif-sub-list\">\n                    <li>\n                        <ul>\n                            <li>\n                                {this.isUnread()}\n                            </li>\n                            <li>\n                                <img className=\"notification-image\" src={this.props.userImage} alt=\"User\"/>\n                            </li>\n                        </ul>\n                    </li>\n                    <li>\n                        <div className=\"notification-message-container\">\n                            <p className=\"notification-name\">{this.props.name}</p>\n                            <p className=\"notification-message\">{this.props.message}</p>\n                            <p className=\"notification-date\">{formatDate.displayTimeSince(this.props.date)}</p>\n                        </div>\n                    </li>\n                </ul>\n                </Link>\n                \n              \n            </div>\n        \n        );\n    }\n}\n\nexport default Notification;","import React, { Component } from \"react\";\nimport '../css/NotificationList.css';\nimport Notification from \"../components/Notification\"\nimport { Link, Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass NotificationList extends Component {\n    constructor(props) {\n        super(props);\n        this.toggleUserMenu = this.toggleUserMenu.bind(this);\n        this.logout = this.logout.bind(this);\n        this.state = {\n            notifications :[]\n        }\n    }\n    logout(){\n        this.props.logout();\n        this.props.hideMenu();\n        Cookies.remove(\"user\")\n         return(\n             <Redirect to=\"/\"></Redirect>\n         );\n    }\n    toggleUserMenu(){\n        if(this.props.type === \"Notifications\") {\n            if(this.props.notifications.length < 1) {\n                return(\n                    <p className=\"text-light no-notifications\">Notifications will appear here</p>\n                )\n            }\n            else {\n\n            \n            return (\n                <ul>\n                    {this.props.notifications.map((video, index) => (\n                        <li key={index}><Notification userImage={video.Author_Image} \n                        name={video.Author_First_Name + \" \" +video.Author_Last_Name} \n                        date={video.Date} message={video.Message} VideoId={video.VideoId}\n                        hideMenu={this.props.hideMenu} isRead={video.Viewed}/></li>\n                    ))}\n                </ul>\n            )\n        }\n        }\n        else {\n            return (\n                <ul className=\"user-settings-menu\">\n                    <li onClick={this.props.hideMenu}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-gear-fill\" viewBox=\"0 0 16 16\">\n                            <path d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\"/>\n                        </svg>\n                        <Link to=\"/Settings\">\n                            <span>Settings</span>\n                        </Link>\n                        \n                    </li>\n                    <li onClick={this.props.hideMenu}>\n                        <Link to=\"/LikedVideos\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-hand-thumbs-up-fill\" viewBox=\"0 0 16 16\">\n                            <path d=\"M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a9.84 9.84 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733.058.119.103.242.138.363.077.27.113.567.113.856 0 .289-.036.586-.113.856-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.163 3.163 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16H8c-.605 0-1.07-.081-1.466-.218a4.82 4.82 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z\"/>\n                        </svg>\n                        <span>Liked Videos</span>\n                        </Link>\n                    </li>\n                    <li onClick={this.props.hideMenu}>\n                        <Link to={\"/PaymentSettings/\"+this.props.user._id}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-credit-card-2-back-fill\" viewBox=\"0 0 16 16\">\n                         <path d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v5H0V4zm11.5 1a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h2a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-2zM0 11v1a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-1H0z\"/>\n                        </svg>\n                        <span>Payment Settings</span>\n                        </Link>\n                    </li>\n                    <li onClick={this.props.hideMenu}>\n                    <Link to={\"/User/\"+this.props.user._id}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-emoji-sunglasses\" viewBox=\"0 0 16 16\">\n                            <path d=\"M4.968 9.75a.5.5 0 1 0-.866.5A4.498 4.498 0 0 0 8 12.5a4.5 4.5 0 0 0 3.898-2.25.5.5 0 1 0-.866-.5A3.498 3.498 0 0 1 8 11.5a3.498 3.498 0 0 1-3.032-1.75zM7 5.116V5a1 1 0 0 0-1-1H3.28a1 1 0 0 0-.97 1.243l.311 1.242A2 2 0 0 0 4.561 8H5a2 2 0 0 0 1.994-1.839A2.99 2.99 0 0 1 8 6c.393 0 .74.064 1.006.161A2 2 0 0 0 11 8h.438a2 2 0 0 0 1.94-1.515l.311-1.242A1 1 0 0 0 12.72 4H10a1 1 0 0 0-1 1v.116A4.22 4.22 0 0 0 8 5c-.35 0-.69.04-1 .116z\"/>\n                            <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-1 0A7 7 0 1 0 1 8a7 7 0 0 0 14 0z\"/>\n                        </svg>\n                        \n                            <span>My Profile</span>\n                        </Link>\n                    </li>\n                    <li onClick={this.logout}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-box-arrow-right\" viewBox=\"0 0 16 16\">\n                        <path fillRule=\"evenodd\" d=\"M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z\"/>\n                        <path fillRule=\"evenodd\" d=\"M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\"/>\n                    </svg>\n                        <span>Logout</span>\n                    </li>\n                </ul>\n            )\n        }\n    }\n    render() {\n        return (\n            <div className=\"notification-list-container\" >\n                {this.toggleUserMenu()}\n            </div>\n        );\n    }\n}\n\nexport default NotificationList;","class htmlDecode  {\n    htmlDecode(input){\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n      }\n      convertQueryString(input){\n        return input.replace(/%20/g, \" \")\n      }\n    }\n    export default htmlDecode;","import React, { Component } from \"react\";\nimport \"../css/UserMenu.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Link } from 'react-router-dom';\nimport Tippy from \"@tippy.js/react\";\n\nimport NotificationList from \"../components/NotificationList\"\nimport HTMLDecode from \"../GlobalFunctions/HTMLDecode\";\nvar htmlDecode = new HTMLDecode();\n// import bootstrap from \"bootstrap\";\nclass UserMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showNotifications: \"none\",\n            menuTitle: \"Notifications\",\n            showUnreadCount: \"block\"\n        }\n        this.toggleNotifications = this.toggleNotifications.bind(this);\n        this.toggleAccount = this.toggleAccount.bind(this);\n        this.hideMenu = this.hideMenu.bind(this);\n        this.wrapperRef = React.createRef();\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.isLoggedIn = this.isLoggedIn.bind(this);\n        this.readNotifications = this.readNotifications.bind(this)\n    }\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\n            this.setState({ showNotifications: \"none\" });\n            this.readNotifications();\n        }\n\n    }\n\n    toggleNotifications() {\n        this.props.hideUnreadCount()\n        if (this.state.showNotifications === \"none\") {\n            this.props.getNotifications()\n            this.setState({\n                showNotifications: \"inline-block\",\n                menuTitle: \"Notifications\"\n            });\n        }\n        else {\n            this.readNotifications();\n            if (this.state.menuTitle.includes(\"Account\")) {\n                this.props.getNotifications()\n                this.setState({ menuTitle: \"Notifications\" });\n            }\n            else {\n                this.setState({\n                    showNotifications: \"none\",\n                    menuTitle: \"Notifications\"\n                });\n            }\n\n        }\n    }\n\n    hideMenu() {\n        this.setState({ showNotifications: \"none\" })\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n    toggleAccount() {\n        if (this.state.showNotifications === \"none\") {\n            this.setState({\n                showNotifications: \"inline-block\",\n                menuTitle: \"Account: \"+  this.props.user.Subscription_Level\n            });\n        }\n        else {\n\n            if (this.state.menuTitle === \"Notifications\") {\n                this.readNotifications();\n                this.setState({ menuTitle: \"Account: \"+ this.props.user.Subscription_Level});\n            }\n            else {\n                this.setState({\n                    showNotifications: \"none\",\n                    menuTitle: \"Account: \"+ this.props.user.Subscription_Level\n                });\n            }\n        }\n    }\n    testJSON(text) {\n\n        try {\n            JSON.parse(text);\n            return true;\n        } catch (error) {\n            return false;\n        }\n    }\n    isLoggedIn() {\n        if (this.props.user._id) {\n            return (\n                <span>\n                    <Tippy content=\"Account\">\n                        <li onClick={this.toggleAccount}>\n                            <img className=\"user-image\" src={htmlDecode.htmlDecode(this.props.user.Image)} alt=\"User\" />\n                        </li>\n                    </Tippy>\n                    <Tippy content=\"Notifications\">\n                        <li onClick={this.toggleNotifications}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#d4d4d4\" className=\"bi bi-bell-fill upload-icon\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\" />\n                            </svg>\n                            <p className=\"notification-badge\" style={{ display: this.props.showNotificationBadge }}>\n                                {this.props.notificationCount}\n                            </p>\n\n                        </li>\n                    </Tippy>\n                </span>\n\n            );\n        }\n        else {\n            console.log(\"user props non no\")\n            console.log(this.props)\n            return (\n                <li className=\"login-li\">\n                    <Link to=\"/Login\" className=\"btn btn-primary login-home-btn\">Log In</Link>\n                </li>);\n        }\n    }\n    readNotifications() {\n        if (this.props.user._id !== undefined) {\n\n\n            const api_route = 'https://degreeme.io/API/SeenNotifications';\n            const postBody = {\n                user_id: this.props.user._id\n            };\n            const requestMetadata = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postBody),\n            };\n            fetch(api_route, requestMetadata)\n                .then(res => res.json())\n                .then((result) => {\n                    //hide red notif badge\n                })\n        }\n    }\n    showUpgradeButton() {\n        if (this.props.user.Subscription_Level === \"Free Tier\") {\n            return (\n                <Link to=\"/Upgrade\">\n                    <button className=\"btn btn-primary subcribe-btn\">Upgrade</button>\n                </Link>\n            )\n        }\n        else if (this.props.user.Subscription_Level === \"Pro Tier\") {\n            return (\n                <p className=\"text-light tier-text\">Pro Tier</p>\n            )\n        }\n    }\n    render() {\n        return (\n            <div className=\"user-menu\" ref={this.wrapperRef}>\n                <ul>\n                    <li>\n                        {this.showUpgradeButton()}\n                    </li>\n                    <Tippy content=\"Upload\">\n                        <li onClick={this.hideMenu}>\n                            <Link to=\"/Upload\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#d4d4d4\" className=\"bi bi-cloud-upload-fill upload-icon\" viewBox=\"0 0 16 16\">\n                                    <path fillRule=\"evenodd\" d=\"M8 0a5.53 5.53 0 0 0-3.594 1.342c-.766.66-1.321 1.52-1.464 2.383C1.266 4.095 0 5.555 0 7.318 0 9.366 1.708 11 3.781 11H7.5V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11h4.188C14.502 11 16 9.57 16 7.773c0-1.636-1.242-2.969-2.834-3.194C12.923 1.999 10.69 0 8 0zm-.5 14.5V11h1v3.5a.5.5 0 0 1-1 0z\" />\n                                </svg>\n                            </Link>\n                        </li>\n                    </Tippy>\n                    {this.isLoggedIn()}\n                </ul>\n                <div className=\"user-dropdown-container\" style={{ \"display\": this.state.showNotifications }}>\n                    <h1 className=\"user-dropdown-title\">{this.state.menuTitle}</h1>\n                    <NotificationList type={this.state.menuTitle} logout={this.props.logout}\n                        hideMenu={this.hideMenu} user={this.props.user} notifications={this.props.notifications}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\nexport default UserMenu;","import React, {Component} from \"react\";\nimport \"../css/User.css\";\nimport \"../css/AutocompleteItem.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Link } from 'react-router-dom';\n\nclass AutocompleteItem extends Component {\n  render(){\n      \n    return (\n     \n        <div className=\"autocomplete-item\" onClick={this.props.hideAutocomplete}>\n            <Link to={\"/Video/\"+this.props.videoId}>\n              <p className=\"text-light\">{this.props.text}</p>\n            </Link>\n        </div>\n    );\n  }\n}\nexport default AutocompleteItem;","import React, {Component} from \"react\";\nimport \"../css/Header.css\";\nimport \"../css/SearchBar.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport AutocompleteItem from \"../components/AutocompleteItem\"\nimport { BrowserRouter as Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n// import bootstrap from \"bootstrap\";\nclass SearchBar extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            showAutocomplete: \"none\",\n            autocomplete: [],\n            searchText: \"\", \n            redirect: false\n          }\n        this.wrapperRef = React.createRef();\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.showAutocomplete = this.showAutocomplete.bind(this)\n        this.hideAutocomplete = this.hideAutocomplete.bind(this)\n        this.autocomplete = this.autocomplete.bind(this)\n        this.search = this.search.bind(this)\n        this.handleSearchOnEnter = this.handleSearchOnEnter.bind(this)\n        this.redirectToResults = this.redirectToResults.bind(this)\n\n    }\n    showAutocomplete(){\n        this.setState({showAutocomplete: \"none\"})\n    }\n    hideAutocomplete(){\n        alert(\"hide\")\n        this.setState({\n            searchValue: \"\"\n        })\n    }\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\n            this.setState({showAutocomplete: \"none\"});\n        }\n    }\n    handleAutocompleteChange(e){\n        this.setState({autocompleteText: e.target.value});\n\n    }\n    autocomplete(e){\n        this.setState({searchText: e.target.value})\n        //this is causing charts to re-render\n        this.props.setSearchValue(e.target.value)\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n    search(){\n        //  this.setState({searchText: \"\"})\n        return (\n            <Redirect to=\"/SearchResults/\"/>\n        );\n    }\n    handleSearchOnEnter(e){\n        if(e.key === \"Enter\") {\n            this.props.redirectToResults();\n            // this.setState({searchText: \"\"});\n        }\n        \n    }\n    redirectToResults(){\n        if(this.state.redirect) {\n            return (\n                \n                <Redirect push to=\"/SearchResults\"/>\n\n            )\n        }\n    }\n  render(){\n    return (\n        <div className=\"search-bar\" ref={this.wrapperRef}>\n            <div className=\"search-container\">\n                \n                    <input autoComplete=\"off\" value={this.state.searchText} type=\"text\" placeholder=\"Search Videos\" \n                    onChange={this.autocomplete} onKeyPress={this.handleSearchOnEnter}/>\n                \n                <Link to=\"/SearchResults\">\n                    <span className=\"search-icon\" onClick={this.search}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#d4d4d4\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\n                            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n                        </svg>\n                    </span>\n                </Link>\n              \n            </div>\n            <div className=\"search-autocomplete\" \n            style={{\"display\": this.state.showAutocomplete}}>\n                  {this.state.autocomplete.map((video, index) => (\n                      <AutocompleteItem text={video.Title} videoId={video._id}\n                      hideAutocomplete={this.hideAutocomplete}\n                      emptyText={this.emptyText}/>\n                  ))}\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default SearchBar;","import React, {Component} from \"react\";\nimport desktopLogo from \"../images/degreeMeLogo.svg\";\nimport mobileLogo from \"../images/degreeMeHashTag.svg\";\nimport \"../css/Header.css\";\n\nimport UserMenu from \"./UserMenu\"\nimport SearchBar from \"./SearchBar\"\nimport { Link } from 'react-router-dom';\nimport { withRouter} from 'react-router-dom';\n\n// import bootstrap from \"bootstrap\";\nclass Header extends Component {\n  constructor(props){\n    super(props)\n    this.redirectToResults = this.redirectToResults.bind(this)\n  }\n  redirectToResults(){\n      this.props.history.push(\"/SearchResults\")\n}\nrenderLogo(){\n  if(this.props.user._id !== undefined){\n    return(\n      <Link to=\"/Home\"><img className=\"site-logo desktop-logo\" src={desktopLogo} alt=\"Logo\" /><img className=\"site-logo mobile-logo\" src={mobileLogo} alt=\"Logo\" /></Link>\n    )\n  }\n  else {\n    return (\n      <Link to=\"/\"><img className=\"site-logo desktop-logo\" src={desktopLogo} alt=\"Logo\" /><img className=\"site-logo mobile-logo\" src={mobileLogo} alt=\"Logo\" /></Link>\n    );\n  }\n}\n  render(){\n    return (\n        <div className=\"header\">\n          <ul>\n            <li className=\"logo-link\">\n              {this.renderLogo()}\n            </li>\n            <li className=\"search-li\"></li>\n            {/* <li className=\"coming-soon-text\">DegreeMe Video Collection Tool</li> */}\n          </ul>\n          <SearchBar setSearchValue={this.props.setSearchValue}\n          searchValue={this.props.searchValue}\n          redirectToResults={this.redirectToResults}/>\n          <UserMenu user={this.props.user} logout={this.props.logout} \n          setUser={this.props.setUser} notifications={this.props.notifications}\n          getNotifications={this.props.getNotifications}\n          hideUnreadCount={this.props.hideUnreadCount}\n          showNotificationBadge = {this.props.showNotificationBadge}\n          notificationCount = {this.props.notificationCount}\n          handleAutocompleteChange={this.props.handleAutocompleteChange}/>\n        </div>\n    );\n\n\n  }\n}\n\nexport default withRouter(Header);","import React, { Component } from \"react\";\nimport '../css/ProgressBar.css';\nclass ProgressBar extends Component {\n    constructor(props) {\n        super(props);\n        this.calculateProgressWidth = this.calculateProgressWidth.bind(this)\n    }\n    calculateProgressWidth(progress){\n        // alert(\"calc\")\n        if(progress !== undefined) {\n            return 300 * progress\n        }\n        else{\n            return 0;\n        }\n    }\n    render() {\n        const computedClassName = this.props.show ? 'uploading' : 'not-uploading';\n        return (\n\n            <div id=\"progress-container\" className={computedClassName}>\n                <p className=\"progress-label\">{this.props.type}</p>\n                <div className=\"progressBar\" style={{ width: 300 }}>\n                    <div className=\"upload-status\" style={{ width: this.calculateProgressWidth(this.props.progress) }}><span></span></div>\n                </div>\n                <p className=\"progress-text\">{Math.round(this.props.progress * 100)}%</p>\n            </div>\n        );\n\n\n\n\n    }\n}\n\nexport default ProgressBar;","import React, { Component } from \"react\";\nimport '../css/TagsInput.css';\nimport '../css/VideoUploader.css';\nclass TagsInput extends Component {\n    \n    render() {\n        return (\n            <div className=\"tags-container\">\n                <div className=\"tags-input-container\">\n                <p className=\"input-label\">Add tags</p>\n                    <input name=\"tags\" className=\"tags-input\" ref={this.props.tag} autoComplete=\"off\"/>\n                    <span className=\"btn-primary add-tags-btn\" onClick={this.props.addTag}>Add</span>\n                </div>\n\n                <div className=\"append-tags\">\n                    {this.props.tags.map((tag, index) => (\n                        <div key={index} className=\"tag-container\" >\n                            <p className=\"tag\">\n                            <span className=\"text-light remove-tag\" onClick={() => this.props.removeTag(index)}>x</span>\n                                {tag}\n                            </p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TagsInput;","import React, {Component} from \"react\";\nimport \"../css/VideoActions.css\";\nimport \"../css/VideoModal.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Modal from \"react-bootstrap/Modal\";\nimport Tippy from \"@tippy.js/react\";\nimport \"tippy.js/dist/tippy.css\"\n\nclass VideoUploadModal extends Component {\n   \n  render(){\n    return (\n    <div className=\"video-actions\">\n      <Modal centered show={this.props.isOpen} onHide={this.props.hideModal}\n      className=\"share-modal\">\n        <Modal.Header>\n          <Modal.Title>\n             <p>Video Published\n                 </p>\n              <p className=\"close-modal\" onClick={this.props.hideModal}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" fill=\"white\" className=\"bi bi-x\" viewBox=\"0 0 16 16\">\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n            </svg>\n              </p>\n\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <p className=\"video-modal-label\">Title</p>\n            <h1 className=\"video-modal-title\">\n                {this.props.Title}\n            </h1>\n            <img className=\"thumbnail\" src={this.props.Thumbnail} alt=\"Video Thumbnail\"/>\n            <p className=\"video-modal-label\">Creator</p>\n            <p className=\"video-modal-description\">\n                {this.props.Creator}\n            </p>\n            <p className=\"video-modal-label\">Description</p>\n\n            <p className=\"video-modal-description\">{this.props.Description}</p>\n            <p className=\"video-modal-label\">Share</p>\n            <p>\n                http://localhost:3000/Video/{this.props.videoId}\n                <Tippy content=\"Copy To Clipboard\">\n                    <span className=\"copy-btn\" onClick={this.props.copyToClipboard}>COPY</span>\n                </Tippy>\n            </p>\n        </Modal.Body>\n        <Modal.Footer>\n        </Modal.Footer>\n      </Modal>\n      \n        </div>\n    );\n  }\n}\n\nexport default VideoUploadModal;","import React, { Component } from \"react\";\nimport '../css/Keywords.css';\nimport '../css/VideoUploader.css';\nclass KeyWordsInput extends Component {\n    renderYourKeywordsText(){\n        if(this.props.keywords.length > 0){\n            return(\n                <p className=\"text-light your-keywords\">Your keywords</p>\n            );\n        }\n    }\n    render() {\n        return (\n            <div className=\"tags-container\">\n                <div className=\"keywords-input-container\">\n                    <input name=\"tags\" className=\"keywords-input\" ref={this.props.keyword} autoComplete=\"off\"/>\n                    <span className=\"btn-primary add-tags-btn\" onClick={this.props.addKeyword}>Add</span>\n                </div>\n                    {this.renderYourKeywordsText()}\n                <div className=\"append-tags\">\n                    <ul className=\"keywords-list\">\n                        {this.props.keywords.map((keyword, index) => (\n                            <li key={index}>\n                                <div className=\"tag-container\" >\n                                    <p key={index} className=\"tag text-light\">\n                                    <span className=\"text-light remove-tag\" onClick={() => this.props.removeKeyword(index)}>x</span>\n                                        {keyword}\n                                    </p>\n                                </div>\n                            </li>\n                            \n                        ))}\n                    </ul>\n                     <p className=\"keywords-helper-text\">Keywords control the videos that populate your dashboard</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default KeyWordsInput;","import React, {Component} from \"react\";\nimport \"../css/SubscriptionItem.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nclass SubscriptionItem extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      subscription_level: \"Free Tier\",\n      selected: this.props.selected\n    } \n  }\n \n  render(){\n    return (\n        <div className=\"sub-container\">\n          <label htmlFor={this.props.id} className=\"subscription-item\" style={{border: this.props.selected}}>\n            <p className=\"option-keywords-text text-light sub-title\">{this.props.type}</p>\n              <p className=\"text-light sub-desc\">{this.props.description}</p>\n              <p className=\"option-keywords-text text-light price\">{this.props.price}</p>\n          </label>\n          <input className=\"sub-radio\" type=\"radio\" id={this.props.id} name=\"tier\" value={this.props.id} onChange={this.props.selectSubscription} />\n        </div>\n    );\n  }\n}\nexport default SubscriptionItem;","import React, {Component} from \"react\";\nimport \"../css/Settings.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport SubscriptionItem from \"./Select-SubscriptionItem\";\nclass Subscriptions extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      subscription_level: \"Free Tier\",\n      freeTierSelected: \"none\",\n      proTierSelected:\"2px solid #007bff\"\n    }\n    this.selectSubscription = this.selectSubscription.bind(this)\n\n  }\n  selectSubscription(e){\n    if(e.target.value === \"free_tier\") {\n      this.props.selectSubscription(\"Free Tier\")\n      this.props.hideCardInput();\n      this.setState({\n        freeTierSelected: \"2px solid #007bff\",\n        proTierSelected: \"none\"\n      })\n     \n    }\n    else {\n      this.props.showCardInput();\n      this.props.selectSubscription(\"Pro Tier\")\n\n      this.setState({\n        freeTierSelected: \"none\",\n        proTierSelected: \"2px solid #007bff\"\n      })\n    }\n   \n  }\n  render(){\n    return (\n        <div>\n            <p className=\"option-keywords-text text-light\">Subscription Level</p>\n            <SubscriptionItem type=\"Free Tier\" id=\"free_tier\" description=\"10 minutes of streaming access per month\"  \n            selectSubscription = {this.selectSubscription.bind(\"Free Tier\")} price=\"Free\" selected={this.state.freeTierSelected}\n            />\n            <SubscriptionItem type=\"Pro Tier\" id=\"pro_tier\" description=\"Unlimited streaming access\" \n             selectSubscription = {this.selectSubscription.bind(\"Pro Tier\")} price=\"$8/month\" selected={this.state.proTierSelected} \n             />\n        </div> \n    );\n  }\n}\nexport default Subscriptions;","import React, { Component } from \"react\";\nimport '../css/CreateAccount.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport KeyWordsInput from \"../components/KeyWordsInput.js\";\nimport Subscriptions from \"../components/Subscriptions\"\nimport { CardElement, Elements, ElementsConsumer } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport ReactGA from 'react-ga';\nimport { Link } from 'react-router-dom';\n\nconst TRACKING_ID = \"247336033\";\nReactGA.initialize(TRACKING_ID);\nclass CreateAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\",\n      error: \"Please fill out all fields\",\n      showError: \"none\",\n      errorClass: \"error\",\n      keywords: [],\n      showCardInput: true,\n      subscription: \"Pro Tier\",\n      stripePromise: loadStripe('pk_test_6pRNASCoBOKtIshFeQd4XMUh'),\n      paymentMethod: \"none\",\n      cardComplete: false,\n      paymentSubmitted: false,\n      agreedToTerms: false\n    };\n    this.createAccount = this.createAccount.bind(this)\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n    this.handleLastNameChange = this.handleLastNameChange.bind(this);\n    this.showError = this.showError.bind(this);\n    this.hideError = this.hideError.bind(this);\n    this.setError = this.setError.bind(this);\n    this.keyword = React.createRef();\n    this.addKeyword = this.addKeyword.bind(this);\n    this.removeKeyword = this.removeKeyword.bind(this);\n    this.showCardInput = this.showCardInput.bind(this);\n    this.hideCardInput = this.hideCardInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.renderCard = this.renderCard.bind(this)\n    this.setSubscription = this.setSubscription.bind(this)\n    this.validateStripeCard = this.validateStripeCard.bind(this)\n    this.checkAllFieldsComplete = this.checkAllFieldsComplete.bind(this)\n    this.setAgreedToTerms = this.setAgreedToTerms.bind(this)\n\n  }\n  validateStripeCard = (elements) => {\n    const cardElement = elements.getElement(CardElement);\n    cardElement.on('change', (event) => {\n      if (event.complete) {\n        this.setState({ cardComplete: true })\n      } else {\n        this.setState({ cardComplete: false })\n      }\n\n    });\n  }\n  setAgreedToTerms(e){\n    this.setState({agreedToTerms: e.target.checked})\n  }\n  validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n  handleSubmit = async (elements, stripe) => {\n    this.setState({paymentSubmitted: true})\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n    const cardElement = elements.getElement(CardElement);\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      this.state.paymentMethod = paymentMethod;\n      this.createAccount();\n      this.setState({paymentSubmitted: false})\n\n    }\n  };\n  checkIfStripeCardComplete(event) {\n    if (event.complete) {\n      alert(\"done\")\n    }\n  }\n  checkAllFieldsComplete(){\n    if(this.state.first_name === \"\" ||\n    this.state.last_name === \"\" ||\n    this.state.email === \"\" ||\n    this.state.password === \"\"\n    ) {\n      return false;\n    }\n    else{\n      return true\n    }\n  }\n  //controls card input display\n  renderCard(elements, stripe) {\n    if (this.state.showCardInput) {\n      return (\n        <div >\n          <div className=\"card-input-container\">\n            <CardElement\n              onChange={() => this.validateStripeCard(elements)}\n              options={{\n                style: {\n                  base: {\n                    fontSize: '16px',\n                    color: 'white',\n                    '::placeholder': {\n                      color: '#aab7c4',\n                    },\n                  },\n                  invalid: {\n                    color: '#9e2146',\n                  },\n                },\n              }}\n            />\n          </div>\n          <li>\n            <div className=\"keywords-create-account-wrapper\">\n              <p className=\"option-keywords-text\"> Add Keywords <i className=\"text-light\">Optional</i>\n              </p>\n              <KeyWordsInput addKeyword={this.addKeyword} removeKeyword={this.removeKeyword}\n                keyword={this.keyword} keywords={this.state.keywords} />\n            </div>\n\n          </li>\n          <li className=\"terms-link\">\n              <Link to=\"/\">\n                Terms and Conditions\n              </Link>\n          </li>\n          <li className=\"text-light terms-li\">\n          <input onChange={this.setAgreedToTerms} type=\"checkbox\" className=\"terms-checkbox\"/>\n             \n            <span className=\"agree-text\">I agree to DegreeMe's terms and conditions</span>\n          </li>\n          <li>\n            <div className=\"btn-container\">\n              <button className=\"btn btn-primary\" onClick={() => this.handleSubmit(elements, stripe)}\n                disabled={(!stripe || !this.state.cardComplete || !this.checkAllFieldsComplete() || !this.state.agreedToTerms)\n                  && (this.state.subscription !== \"Free Tier\" || this.state.paymentSubmitted)\n                }>Create Account</button>\n            </div>\n          </li>\n          <li>\n            <p className={this.state.errorClass} style={{ display: this.state.showError }}>{this.state.error}</p>\n          </li>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div >\n          <li>\n            <div className=\"keywords-create-account-wrapper\">\n              <p className=\"option-keywords-text\"> Add Keywords <i className=\"text-light\">Optional</i>\n              </p>\n              <KeyWordsInput addKeyword={this.addKeyword} removeKeyword={this.removeKeyword}\n                keyword={this.keyword} keywords={this.state.keywords} />\n            </div>\n\n          </li>\n          <li className=\"terms-link\">\n              <Link to=\"/\">\n                Terms and Conditions\n              </Link>\n          </li>\n          <li className=\"text-light terms-li\">\n          <input onChange={this.setAgreedToTerms} type=\"checkbox\" className=\"terms-checkbox\"/>\n             \n            <span className=\"agree-text\">I agree to DegreeMe's terms and conditions</span>\n          </li>\n          <li>\n            <div className=\"btn-container\">\n              <button className=\"btn btn-primary\" onClick={() => this.createAccount()}\n                disabled={!this.checkAllFieldsComplete() || !this.state.agreedToTerms}>Create Account</button>\n            </div>\n          </li>\n          <li>\n            <p className={this.state.errorClass} style={{ display: this.state.showError }}>{this.state.error}</p>\n          </li>\n        </div>\n      );\n    }\n\n  }\n  //create account once payment info is stored\n  createAccount() {\n    var isEmail = this.validateEmail(this.state.email);\n    if (this.state.first_name === \"\" ||\n      this.state.last_name === \"\" ||\n      this.state.email === \"\" ||\n      this.state.password === \"\") {\n      this.showError();\n    }\n    else if (!isEmail) {\n      this.showError();\n      this.setState({ error: \"Not a valid email\" });\n    }\n    else {\n      const api_route = 'https://degreeme.io/API/AddUser';\n      const postBody = {\n        First_Name: this.state.first_name,\n        Last_Name: this.state.last_name,\n        Email: this.state.email,\n        Password: this.state.password,\n        Keywords: this.state.keywords,\n        Subscription: this.state.subscription,\n        PaymentMethodId: this.state.paymentMethod.id\n      };\n      const requestMetadata = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postBody)\n      };\n      fetch(api_route, requestMetadata)\n        .then(res => res.json())\n        .then((res) => {\n          if (res === \"This email is already in use\") {\n            this.setState({\n              errorClass: \"error\",\n              error: res,\n              showError: \"block\"\n            })\n          }\n          else {\n            this.setState({\n              errorClass: \"success\",\n              error: \"Account Successfully Created\",\n              showError: \"block\"\n            })\n            ReactGA.event({\n              category: 'User',\n              action: 'Created an Account'\n            });\n          }\n        })\n    }\n\n  }\n  handleFirstNameChange(e) {\n    this.setState({ first_name: e.target.value });\n  }\n  handleLastNameChange(e) {\n    this.setState({ last_name: e.target.value });\n  }\n  handleEmailChange(e) {\n    this.setState({ email: e.target.value });\n  }\n  showCardInput() {\n    this.setState({ showCardInput: true })\n  }\n  hideCardInput() {\n    this.setState({ showCardInput: false })\n  }\n  handlePasswordChange(e) {\n    this.setState({ password: e.target.value });\n  }\n  showError() {\n    this.setState({ showError: \"block\" })\n  }\n  hideError() {\n    this.setState({ showError: \"none\" })\n  }\n  setError(error) {\n    this.setState({ error: error })\n  }\n  addKeyword() {\n    //if keyword isn't empty, add it\n    if (this.keyword.current.value !== \"\") {\n      var newArray = this.state.keywords.concat(this.keyword.current.value)\n      this.setState({ keywords: newArray })\n      this.keyword.current.value = \"\";\n    }\n  }\n  //remove keyword by index\n  removeKeyword(index) {\n    const newArray = this.state.keywords\n    newArray.splice(index, 1)\n    this.setState({ keywords: newArray });\n  }\n  setSubscription(sub) {\n    this.setState({ subscription: sub })\n  }\n  loadStripe(){\n    return loadStripe('pk_test_89vfyOdmTWo09jkpoyAnRy1l00ll36NLGn');\n  }\n  render() {\n\n    return (\n      <div className=\"login-container\">\n        <h2 className=\"create-account-title text-light\">Create Account</h2>\n        <ul>\n          <li>\n            <div className=\"create-account-input-container\">\n              <p className=\"create-account-input-label\">First Name</p>\n              <input type=\"text\" name=\"First_Name\" onChange={this.handleFirstNameChange} />\n            </div>\n          </li>\n          <li>\n            <div className=\"create-account-input-container\">\n              <p className=\"create-account-input-label\">Last Name</p>\n              <input type=\"text\" name=\"Last_Name\" onChange={this.handleLastNameChange} />\n            </div>\n          </li>\n          <li>\n            <div className=\"create-account-input-container\">\n              <p className=\"create-account-input-label\">Email</p>\n              <input type=\"email\" name=\"Email\" onChange={this.handleEmailChange} />\n            </div>\n          </li>\n          <li>\n            <div className=\"create-account-input-container\">\n              <p className=\"create-account-input-label\">Password</p>\n              <input type=\"password\" name=\"Password\" onChange={this.handlePasswordChange} />\n            </div>\n          </li>\n          <Subscriptions showCardInput={this.showCardInput}\n            hideCardInput={this.hideCardInput} selectSubscription={this.setSubscription} />\n          <Elements stripe={this.loadStripe()}>\n            <ElementsConsumer>\n              {({ elements, stripe }) => (\n                this.renderCard(elements, stripe)\n              )}\n            </ElementsConsumer>\n          </Elements>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CreateAccount;","import React, { Component } from \"react\";\nimport \"../css/UserMenu.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"../css/CreateSellerAccount.css\"\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport Cookies from \"js-cookie\"\nimport { Link } from 'react-router-dom';\n\n// import bootstrap from \"bootstrap\";\nclass CreateSellerAccount extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dob: \"\",\n            street_number: \"\",\n            postal_code: \"\",\n            city: \"\",\n            country: \"US\",\n            state: \"North Carolina\",\n            phone: \"\",\n            ssn: \"\",\n            routing_number: \"\",\n            account_number: \"\",\n            formComplete: false,\n            formSubmitted: false,\n            error: false,\n            success: false,\n            agreedToTerms: false\n        }\n        this.createStripeAccount = this.createStripeAccount.bind(this);\n        this.createStateDropdown = this.createStateDropdown.bind(this);\n        this.handleStreetNumberChange = this.handleStreetNumberChange.bind(this)\n        this.handleStateChange = this.handleStateChange.bind(this);\n        this.handlePostalChange = this.handlePostalChange.bind(this);\n        this.handleCityChange = this.handleCityChange.bind(this)\n        this.handleDOBChange = this.handleDOBChange.bind(this)\n        this.handleSSNChange = this.handleSSNChange.bind(this)\n        this.handleRoutingChange = this.handleRoutingChange.bind(this)\n        this.handleAccountChange = this.handleAccountChange.bind(this)\n        // this.handlePhoneChange = this.handlePhoneChange.bind(this)\n        this.showLoader = this.showLoader.bind(this);\n        this.setAgreedToTerms = this.setAgreedToTerms.bind(this)\n    }\n    setAgreedToTerms(e) {\n        this.setState({ agreedToTerms: e.target.checked })\n    }\n    validateInputFields() {\n        if (this.state.routing_number.length !== 9) {\n            return \"Routing number length must be 9\";\n        }\n        else if (this.state.account_number.length !== 12) {\n            return \"Account number length must be 12\";\n        }\n    }\n    handleDOBChange(e) {\n        this.setState({ dob: e.target.value })\n    }\n    handleStreetNumberChange(e) {\n        this.setState({ street_number: e.target.value })\n    }\n    handlePostalChange(e) {\n        this.setState({ postal_code: e.target.value })\n    }\n    handleCityChange(e) {\n        this.setState({ city: e.target.value })\n    }\n    handleStateChange(e) {\n        this.setState({ city: e.target.value })\n    }\n    // handlePhoneChange(e){\n    //     console.log(\"change\")\n    //     // this.setState({phone: e.target.value})\n    // }\n    showError() {\n        if (this.state.error !== false) {\n            return (\n                <div className=\"create-payment-message\">\n                    <p className=\" badge-danger create-payment-account-error \">{this.state.error}</p>\n                </div>\n            );\n\n        }\n    }\n    showSuccess() {\n        if (this.state.success) {\n            return (\n                <div className=\"create-payment-message\">\n                    <p className=\" badge-success create-payment-account-error \">Payment Account Added</p>\n                </div>\n            );\n\n        }\n    }\n    showLoader() {\n        if (this.state.formSubmitted) {\n            return (\n                <div className=\"create-payment-message\">\n                    <div className=\"loader-create-payment-account\"></div>\n                    <p className=\"text-light\">Creating Payment Account</p>\n                </div>\n            );\n        }\n    }\n    handleSSNChange(e) {\n        if (isNaN(e.target.value)) {\n            e.target.value = this.state.ssn;\n        }\n        else if (e.target.value.length < 5) {\n            this.setState({ ssn: e.target.value })\n        }\n\n        else {\n            e.target.value = this.state.ssn;\n        }\n    }\n    handleRoutingChange(e) {\n        if (isNaN(e.target.value) || e.target.value.length > 9) {\n            e.target.value = this.state.routing_number;\n        }\n        else {\n            this.setState({ routing_number: e.target.value })\n        }\n    }\n    handleAccountChange(e) {\n        if (isNaN(e.target.value) || e.target.value.length > 12) {\n            e.target.value = this.state.account_number;\n        }\n        else {\n            this.setState({ account_number: e.target.value })\n        }\n    }\n    createStripeAccount() {\n        if (Cookies.get(\"user\") !== undefined) {\n            this.setState({ formSubmitted: true, error: false })\n            var user = JSON.parse(Cookies.get(\"user\"));\n            const api_route = 'https://degreeme.io/API/CreateStripeAccount';\n            const postBody = {\n                user_id: user._id,\n                dob: this.state.dob,\n                street_number: this.state.street_number,\n                postal_code: this.state.postal_code,\n                city: this.state.city,\n                state: this.state.state,\n                country: this.state.country,\n                phone: this.state.phone,\n                ssn: this.state.ssn,\n                routing_number: this.state.routing_number,\n                account: this.state.account_number\n            };\n            const requestMetadata = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postBody)\n            };\n            fetch(api_route, requestMetadata)\n                .then(res => res.json())\n                .then((result) => {\n                    if (result._id !== undefined) {\n                        //call setUser here with new user object\n                        this.setState({ success: true, formSubmitted: false })\n                        this.props.setUser(result)\n                    }\n                    else {\n                        this.setState({ error: result.raw.message, formSubmitted: false })\n                    }\n                })\n                .catch((err) => {\n                })\n        }\n    }\n    createStateDropdown() {\n        return (\n            <div className=\"state-select-container\">\n                <select className=\"state-select\" name=\"state-select\" onChange={this.handleStateChange}\n                defaultValue=\"North Carolina\">\n                    <option value=\"Alabama\">Alabama</option>\n                    <option value=\"Alaska\">Alaska</option>\n                    <option value=\"Arizona\">Arizona</option>\n                    <option value=\"Arkansas\">Arkansas</option>\n                    <option value=\"California\">California</option>\n                    <option value=\"Colorado\">Colorado</option>\n                    <option value=\"Delaware\">Delaware</option>\n                    <option value=\"Florida\">Florida</option>\n                    <option value=\"Georgia\">Georgia</option>\n                    <option value=\"Hawaii\">Hawaii</option>\n                    <option value=\"Idaho\">Idaho</option>\n                    <option value=\"Indiana\">Indiana</option>\n                    <option value=\"Iowa\">Iowa</option>\n                    <option value=\"Kansas\">Kansas</option>\n                    <option value=\"Kentucky\">Kentucky</option>\n                    <option value=\"Louisiana\">Louisiana</option>\n                    <option value=\"Maine\">Maine</option>\n                    <option value=\"Maryland\">Maryland</option>\n                    <option value=\"Massachusetts\">Massachusetts</option>\n                    <option value=\"Michigan\">Michigan</option>\n                    <option value=\"Minnesota\">Minnesota</option>\n                    <option value=\"Mississippi\">Mississippi</option>\n                    <option value=\"Missouri\">Missouri</option>\n                    <option value=\"Montana\">Montana</option>\n                    <option value=\"Nebraska\">Nebraska</option>\n                    <option value=\"Nevada\">Nevada</option>\n                    <option value=\"New Hampshire\">New Hampshire</option>\n                    <option value=\"New Jersey\">New Jersey</option>\n                    <option value=\"New Mexico\">New Mexico</option>\n                    <option value=\"North Carolina\" >North Carolina</option>\n                    <option value=\"North Dakota\">North Dakota</option>\n                    <option value=\"Ohio\">Ohio</option>\n                    <option value=\"Oklahoma\">Oklahoma</option>\n                    <option value=\"Oregon\">Oregon</option>\n                    <option value=\"Pennsylvania\">Pennsylvania</option>\n                    <option value=\"Rhode Island\">Rhode Island</option>\n                    <option value=\"South Carolina\">South Carolina</option>\n                    <option value=\"South Dakota\">South Dakota</option>\n                    <option value=\"Tennessee\">Tennessee</option>\n                    <option value=\"Texas\">Texas</option>\n                    <option value=\"Utah\">Utah</option>\n                    <option value=\"Vermont\">Vermont</option>\n                    <option value=\"Virginia\">Virginia</option>\n                    <option value=\"Washington\">Washington</option>\n                    <option value=\"West Virginia\">West Virginia</option>\n                    <option value=\"Wisconsin\">Wisconsin</option>\n                    <option value=\"Wyoming\">Wyoming</option>\n                    <option value=\"District of Columbia\">District of Columbia</option>\n                </select>\n            </div>\n        )\n    }\n    render() {\n        return (\n            <div className=\"create-seller-account\">\n                <h4 className=\"text-light create-seller-title\">Create a seller account so you can be paid for your content</h4>\n                <div className=\"badge badge-warning create-seller-message\">\n                    We do not save any of the below data on our servers.\n            </div>\n                <p className=\"text-light\">Your data will be stored with our payments processor, Stripe.</p>\n                <a href=\"https://stripe.com/legal\" className=\"stripe-link\" target=\"_blank\" rel=\"noreferrer\">Stripe's terms and conditions</a>\n                <input type=\"hidden\" autoComplete=\"false\" />\n                <ul className=\"create-seller-list\">\n\n\n                    <li className=\"create-seller-li-1\">\n                        <div className=\"create-seller-input-container\">\n                            <p className=\"text-light create-seller-label\">Street Number</p>\n                            <input className=\"create-seller-input\" type=\"text\" onChange={this.handleStreetNumberChange}\n                                autoComplete=\"off\" />\n                        </div>\n                        <div className=\"create-seller-input-container\">\n                            <p className=\"text-light create-seller-label\" >Postal Code</p>\n                            <input autoComplete=\"off\" type=\"text\" onChange={this.handlePostalChange}\n                                className=\"create-seller-input\" />\n                        </div>\n                        <div className=\"create-seller-input-container\">\n                            <p className=\"text-light create-seller-label\" >City</p>\n                            <input autoComplete=\"off\" type=\"text\" onChange={this.handleCityChange}\n                                className=\"create-seller-input\" />\n                        </div>\n                        <div className=\"create-seller-input-container\">\n                            <p className=\"text-light create-seller-label\">State</p>\n                            {this.createStateDropdown()}\n                        </div>\n                        <div className=\"create-seller-input-container\">\n                            <p className=\"text-light create-seller-label\" >Country</p>\n                            <input autoComplete=\"off\" className=\"create-seller-input\" type=\"text\" disabled value=\"US\" />\n                        </div>\n                    </li>\n                    <li className=\"create-seller-li-2\">\n                        <div className=\"create-seller-input-container\">\n                            <p className=\"text-light create-seller-label\" >Phone Number</p>\n                            <PhoneInput\n                                country={'us'}\n                                value={this.state.phone}\n                                onChange={phone => this.setState({ phone })}\n                                inputStyle={{\n                                    border: \"none\",\n                                    backgroundColor: \"#181818\"\n                                }}\n                            />\n\n                            {/* <input  className=\"create-seller-input\" type=\"tel\" onChange={this.handlePhoneChange} /> */}\n                        </div>\n                        <div className=\"create-seller-input-container\">\n                            <p className=\"text-light create-seller-label\" >Date of Birth</p>\n                            <input autoComplete=\"off\" className=\"create-seller-input\" type=\"date\" onChange={this.handleDOBChange} />\n                        </div>\n                        <div className=\"create-seller-input-container\">\n                            <p className=\"text-light create-seller-label\" >Last 4 Digits of Social Security Number</p>\n                            <input autoComplete=\"off\" className=\"create-seller-input\" type=\"text\" onChange={this.handleSSNChange} />\n                        </div>\n                        <div className=\"create-seller-input-container\">\n                            <p className=\"text-light create-seller-label\" >Routing Number</p>\n                            <input autoComplete=\"off\" className=\"create-seller-input\" type=\"text\" onChange={this.handleRoutingChange} />\n                        </div>\n                        <div className=\"create-seller-input-container\">\n                            <p className=\"text-light create-seller-label\"  >Account Number</p>\n                            <input className=\"create-seller-input\" type=\"text\" onChange={this.handleAccountChange} />\n                        </div>\n                    </li>\n\n                </ul>\n                <div>\n                    <Link to=\"/\">\n                        Terms and Conditions\n              </Link>\n                </div>\n                <div className=\"terms-container\">\n\n                    <input onChange={this.setAgreedToTerms} type=\"checkbox\" className=\"terms-checkbox\" />\n                    <span className=\"agree-text text-light\">I agree to DegreeMe's terms and conditions</span>\n                </div>\n                <br></br>\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.createStripeAccount}\n                    disabled={!(this.state.dob !== \"\" && this.state.street_number !== \"\"\n                        && this.state.postal_code !== \"\" && this.state.city !== \"\"\n                        && this.state.state !== \"\" && this.state.ssn !== \"\"\n                        && this.state.routing_number !== \"\" && this.state.account_number !== \"\"\n                        && this.state.phone !== \"\" && this.state.agreedToTerms) || this.state.formSubmitted}\n                >Create Payment Account</button>\n                {this.showLoader()}\n                {this.showError()}\n                {this.showSuccess()}\n\n\n            </div>\n        );\n    }\n}\nexport default CreateSellerAccount;","import React, { Component } from \"react\";\nimport '../css/VideoUploader.css';\nimport firebase from \"firebase/app\";\nimport 'firebase/storage';\nimport ProgressBar from \"./ProgressBar\";\nimport TagsInput from './TagsInput';\nimport { v4 as uuid } from \"uuid\";\nimport { Video } from 'video-metadata-thumbnails';\nimport VideoUploadModal from \"./VideoUploadModal\";\nimport Cookies from 'js-cookie';\nimport CreateAccount from \"../components/CreateAccount\"\nimport CreateSellerAccount from \"../components/CreateSellerAccount\"\nimport 'bootstrap/dist/css/bootstrap.css';\nconst config = {\n  apiKey: \"AIzaSyCdNXC20rfZy4WU_Yo0r1_jqurajcevaI0\",\n  authDomain: \"degreeme-bd5c7.firebaseapp.com\",\n  databaseURL: \"https://degreeme-bd5c7.firebaseio.com\",\n  projectId: \"degreeme-bd5c7\",\n  storageBucket: \"degreeme-bd5c7.appspot.com\",\n  messagingSenderId: \"52205869765\",\n  appId: \"1:52205869765:web:b577285fdc02f989616eac\",\n  measurementId: \"G-W912PS5JG0\"\n};\nfirebase.initializeApp(config);\nclass VideoUploader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadProgress: 0,\n      show: false,\n      uploading: false,\n      error: \"\",\n      tags: [],\n      thumbnail: \"\",\n      title: \"\",\n      description: \"\",\n      uploadType: \"Uploading video\",\n      isModalOpen: false,\n      videoId: \"\",\n      showDescCharCount: \"none\",\n      showTitleCharCount: \"none\",\n      titleCharLimit: 100,\n      descCharLimit: 2000,\n      titleCharCount: 0,\n      descCharCount: 0,\n      filename: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this)\n    this.addTag = this.addTag.bind(this)\n    this.readImage = this.readImage.bind(this)\n    this.addVideo = this.addVideo.bind(this)\n    this.removeTag = this.removeTag.bind(this)\n    this.setFileName = this.setFileName.bind(this)\n    this.createThumbnail = this.createThumbnail.bind(this)\n    this.postThumbnailToFirebase = this.postThumbnailToFirebase.bind(this)\n    this.showModal = this.showModal.bind(this)\n    this.hideModal = this.hideModal.bind(this)\n    this.handleTitleChange = this.handleTitleChange.bind(this)\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this)\n    this.showTitleChar = this.showTitleChar.bind(this)\n    this.showDescChar = this.showDescChar.bind(this)\n    this.hideTitleChar = this.hideTitleChar.bind(this)\n    this.hideDescChar = this.hideDescChar.bind(this)\n    this.renderUploader = this.renderUploader.bind(this)\n    this.copyToClipboard = this.copyToClipboard.bind(this)\n    this.Description = React.createRef();\n    this.Link = React.createRef();\n    this.tag = React.createRef();\n    this.context = React.createRef();\n\n  }\n  componentDidMount() {\n\n  }\n  handleChange() {\n    this.setState({ show: true });\n  }\n  validateMp4() {\n    var allowedExtensions =\n      /(\\.mp4)$/i;\n    if (!allowedExtensions.exec(this.Link.current.value)) {\n      return false;\n    }\n    return true;\n\n  }\n\n  setFileName(e) {\n    var filename = e.target.value.split(\"\\\\\")[2]\n    this.setState({ filename: filename })\n  }\n  addTag() {\n    //check if tag contains spaces\n    if(this.tag.current.value.trim().includes(\" \")){\n      this.setState({error: \"Tags cannot contain spaces\"})\n      this.tag.current.value = \"\";\n    }\n    //if tag isn't empty, add it\n    else if (this.tag.current.value !== \"\") {\n      var newArray = this.state.tags.concat(this.tag.current.value.trim())\n      this.setState({ \n        tags: newArray, \n        error: \"\"\n       })\n      this.tag.current.value = \"\";\n    }\n  }\n  handleTitleChange(e) {\n    if (e.target.value.length <= this.state.titleCharLimit) {\n      this.setState({\n        title: e.target.value,\n        titleCharCount: e.target.value.length\n      })\n    }\n  }\n  handleDescriptionChange(e) {\n    if (e.target.value.length <= this.state.descCharLimit) {\n      this.setState({\n        description: e.target.value,\n        descCharCount: e.target.value.length\n      })\n    }\n\n  }\n \n  //create thumbnail from video file\n  createThumbnail() {\n    return new Promise((resolve, reject) => {\n      this.setState({ uploadType: \"Creating thumbnail\" });\n      const video = new Video(this.Link.current.files[0]);\n      \n      video.getThumbnails().then((thumbnails) => {\n        var reader = new FileReader();\n        if (thumbnails[0].blob === null) {\n          resolve(false)\n        }\n        else {\n          reader.readAsDataURL(thumbnails[0].blob);\n          //get thumbnail from middle of video to ensure\n          //picture isnt blank black screen\n          this.postThumbnailToFirebase(thumbnails[parseInt(thumbnails.length / 2)].blob)\n            .then((url) => {\n              resolve(url)\n            })\n        }\n\n      })\n    })\n\n  }\n  //remove tag by index\n  removeTag(index) {\n    const newArray = this.state.tags\n    newArray.splice(index, 1)\n    this.setState({ tags: newArray });\n  }\n  addVideoToDatabase(videoUrl) {\n    var user = JSON.parse(Cookies.get(\"user\"));\n    if (user._id !== undefined) {\n      const api_route = 'https://degreeme.io/API/AddVideo';\n      this.createThumbnail(this.Link.current.files[0])\n        .then((url) => {\n          if (url === false) {\n            this.setState({ error: \"An error occurred\" })\n          }\n          else {\n\n            this.setState({ uploadType: \"Posting to database\" });\n            const postBody = {\n              Creator_Id: user._id,\n              Title: this.state.title,\n              Description: this.state.description,\n              Link: videoUrl,\n              tags: this.state.tags,\n              Thumbnail: url\n            };\n            const requestMetadata = {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(postBody)\n            };\n            fetch(api_route, requestMetadata)\n              .then(res => res.json())\n              .then((video) => {\n                this.setState({\n                  videoId: video._id,\n                  title: \"\",\n                  description: \"\",\n                  tags: [],\n                  filename: \"\",\n                  uploading: false,\n                  show: false\n                })\n                this.showModal();\n              })\n              .catch((err) => {\n                this.setState({ type: \"An error occurred. Please try again\" })\n              })\n          }\n        })\n    }\n\n  }\n  \n  readImage(file) {\n    const id = uuid();\n    const storageRef = firebase.storage().ref(\"videos/\" + id).put(file)\n    this.setState({ uploadProgress: this.uploadProgress, show: true })\n    storageRef.on(`state_changed`, snapshot => {\n\n      this.uploadProgress = (snapshot.bytesTransferred / snapshot.totalBytes);\n      this.setState({ uploadProgress: this.uploadProgress, uploading: true })\n    }, error => {\n    },\n      async () => {\n        storageRef.snapshot.ref.getDownloadURL().then(async (url) => {\n          this.addVideoToDatabase(url)\n          this.uploadingMedia = false;\n        });\n      });\n  }\n  addVideo(e) {\n    var validMp4 = this.validateMp4();\n    if (\n      this.state.title === \"\" ||\n      this.state.description === \"\" ||\n      this.Link.current.value === \"\"\n    ) {\n      this.setState({ error: \"Please fill out all fields\" })\n    }\n    //require 5 tags\n    else if (this.state.tags.length < 5) {\n      this.setState({ error: \"You must add at least 5 tags to the video\" })\n    }\n    else if (!validMp4) {\n      this.setState({ error: \"File upload must be .mp4 format\" })\n    }\n    else {\n      this.setState({ uploading: true })\n      const video = new Video(this.Link.current.files[0]);\n      video.getThumbnails().then((thumbnails) => {\n        if(thumbnails[0].blob === null){\n          this.setState({\n            error: \"Please convert your video to mp4 (h.264 codec) and upload again.\",\n            uploading: false,\n\n          })\n        }\n        else {\n          //process the thumbnail, then the video\n          this.readImage(this.Link.current.files[0])\n        }\n      \n    })\n\n  }\n}\n  renderUploader() {\n    //need to fix\n    console.log(\"USER: \" ,this.props.user)\n    if (this.props.user.hasBankAccount &&\n      this.props.user._id !== undefined) {\n\n      return (\n        <div className=\"video-upload-container\">\n          <VideoUploadModal isOpen={this.state.isModalOpen}\n            showModal={this.showModal} hideModal={this.hideModal}\n            Title={this.state.title} Thumbnail={this.state.thumbnail}\n            videoId={this.state.videoId} Description={this.state.description}\n            Creator={this.state.creator} />\n          <h1 className=\"video-upload-title\">Upload Video</h1>\n          <ul>\n            <li>\n              <div className=\"input-container\">\n                <p className=\"input-label\">Title</p>\n                <input autoComplete=\"off\" name=\"Title\" onChange={this.handleTitleChange}\n                  onFocus={this.showTitleChar} onBlur={this.hideTitleChar} value={this.state.title} />\n                <p className=\"char-count\" style={{ \"display\": this.state.showTitleCharCount }}>{this.state.titleCharCount}/{this.state.titleCharLimit}</p>\n              </div>\n\n            </li>\n            <li>\n              <div className=\"input-container\">\n                <p className=\"input-label\">Description</p>\n                <textarea className=\"description\" name=\"Description\" onChange={this.handleDescriptionChange}\n                  onFocus={this.showDescChar} onBlur={this.hideDescChar} value={this.state.description}></textarea>\n                <p className=\"char-count\" style={{ \"display\": this.state.showDescCharCount }}>{this.state.descCharCount}/{this.state.descCharLimit}</p>\n              </div>\n            </li>\n\n            <li className=\"upload-link\">\n              <label htmlFor=\"file-input\">\n                <div className=\"btn btn-primary\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-camera-video-fill\" viewBox=\"0 0 16 16\">\n                    <path fillRule=\"evenodd\" d=\"M0 5a2 2 0 0 1 2-2h7.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 4.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 13H2a2 2 0 0 1-2-2V5z\" />\n                  </svg>\n                  <span className=\"select-file-txt\">\n                    Select MP4 File\n             </span>\n\n                </div>\n              </label>\n              <span className=\"text-light filename\">{this.state.filename}</span>\n              <input id=\"file-input\" className=\"file-input\" type=\"file\" onChange={this.setFileName} ref={this.Link} />\n            </li>\n            <li>\n              <TagsInput addTag={this.addTag} tag={this.tag}\n                tags={this.state.tags} removeTag={this.removeTag} />\n            </li>\n            <li>\n              <button className=\"btn-primary add-video\" onClick={this.addVideo}\n                disabled={this.state.uploading}>Upload Video</button>\n            </li>\n            <li>\n              <ProgressBar progress={this.uploadProgress} show={this.state.show}\n                type={this.state.uploadType} />\n            </li>\n            <li>\n              <p className=\"error\">{this.state.error}</p>\n            </li>\n          </ul>\n        </div>\n\n      );\n    }\n    else if (this.props.user.hasBankAccount === false &&\n      this.props.user._id !== undefined) {\n      return (\n        <CreateSellerAccount setUser={this.props.setUser} />\n      );\n    }\n    else {\n      return (\n        <div>\n          <h2 className=\"text-light create-account-label\">You must create an account to upload a video</h2>\n          <CreateAccount />\n        </div>\n      )\n    }\n  }\n  postThumbnailToFirebase(image) {\n    return new Promise((resolve, reject) => {\n      const id = uuid();\n      const storageRef = firebase.storage().ref(\"thumbnails/\" + id).put(image);\n      storageRef.on(`state_changed`, snapshot => {\n\n        this.uploadProgress = (snapshot.bytesTransferred / snapshot.totalBytes);\n        this.setState({ uploadProgress: this.uploadProgress, uploading: true })\n      }, error => {\n      },\n        async () => {\n          storageRef.snapshot.ref.getDownloadURL().then(async (url) => {\n            this.setState({ thumbnail: url, uploadType: \"Complete\" })\n            resolve(url)\n          });\n        });\n    })\n  }\n  showModal() {\n    this.setState({ isModalOpen: true });\n  };\n  hideModal = () => {\n    this.setState({ isModalOpen: false });\n  };\n  copyToClipboard() {\n    navigator.clipboard.writeText(window.location.href)\n  }\n  showTitleChar() {\n    this.setState({\n      showTitleCharCount: \"block\"\n    });\n  }\n  showDescChar() {\n    this.setState({\n      showDescCharCount: \"block\"\n    });\n  }\n  hideTitleChar() {\n    this.setState({\n      showTitleCharCount: \"none\"\n    });\n  }\n  hideDescChar() {\n    this.setState({\n      showDescCharCount: \"none\"\n    });\n  }\n  render() {\n    return this.renderUploader();\n  }\n}\n\nexport default VideoUploader;","import React, { Component } from \"react\";\nimport \"../css/VideoRow.css\";\nimport \"../css/Video.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport HtmlDecode from \"../GlobalFunctions/HTMLDecode\"\nimport FormatDate from \"../GlobalFunctions/FormatDate\";\nvar formatDate = new FormatDate();\nvar decode = new HtmlDecode()\n\nclass Video extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPlayIcon: \"none\"\n        }\n        this.showPlayIcon = this.showPlayIcon.bind(this)\n        this.hidePlayIcon = this.hidePlayIcon.bind(this)\n    }\n    showPlayIcon() {\n        this.setState({ showPlayIcon: \"block\" })\n    }\n    hidePlayIcon() {\n        this.setState({ showPlayIcon: \"none\" })\n    }\n    render() {\n        return (\n            <div className=\"video-item\" onMouseOut={this.hidePlayIcon} onMouseOver={this.showPlayIcon}>\n                <div className=\"playIcon\" style={{ \"display\": this.state.showPlayIcon }}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" className=\"bi bi-play-fill\" viewBox=\"0 0 16 16\">\n                        <path d=\"m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z\" />\n                    </svg>\n                </div>\n                <img className=\"thumbnail\" src={decode.htmlDecode(this.props.Thumbnail)} alt=\"Video Thumbnail\" />\n                <img className=\"creator-img\" src={this.props.image} alt=\"Creator\" />\n\n                <div className=\"video-details\">\n\n                    <p className=\"video-title\">\n\n                        {this.props.Title}\n                    </p>\n                    <div className=\"sub-details\">\n                        <p className=\"creator-name\">\n\n                            {this.props.Creator}\n                        </p>\n                        <p className=\"view-count\">{this.props.Views} views\n                                {/* <span className=\"view-date-separator\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4\" height=\"4\" fill=\"currentColor\" class=\"bi bi-circle-fill\" viewBox=\"0 0 16 16\">\n                                    <circle cx=\"8\" cy=\"8\" r=\"8\"/>\n                                    </svg>\n                                </span>  */}\n                            <span className=\"video-date\">\n                                {formatDate.displayTimeSince(this.props.date)}\n                            </span>\n                        </p>\n\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Video;","import React, {Component} from \"react\";\nimport \"../css/VideoRow.css\";\nimport Video from \"../components/Video\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Link } from 'react-router-dom';\nimport htmlDecode from \"../GlobalFunctions/HTMLDecode\";\nvar decode = new htmlDecode()\nclass VideoRow extends Component {\n    constructor(props) {\n        super(props);\n        this.getVideos = this.getVideos.bind(this)\n        this.state = {\n            videos:[],\n            isMounted: false\n        }\n    }\n    componentDidMount(){\n        this.setState({isMounted: true});\n        this.getVideos();\n    }\n    componentWillUnmount(){\n        this.setState({isMounted: false})\n    }\n    getVideos(){\n        const api_route = 'https://degreeme.io/API/GetVideosBySearchValue/'+this.props.category;\n        const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n                };\n        fetch(api_route, requestMetadata)\n        .then(response => response.json())\n            .then(result => {\n                if(this.state.isMounted) {\n                    this.setState({videos: result})\n                }\n            })\n    }\n    renderVideoRow(){\n        return (\n            <div className=\"video-row\">\n                <h1 className=\"text-light category\">{decode.htmlDecode(this.props.category)}</h1>\n                <ul>\n                {this.state.videos.map((video, index) => (\n                    <li key={index}>\n                        <Link to={\"/Video/\"+video._id}>\n                            <Video Id={video._id} Title={video.Title} Thumbnail ={video.Thumbnail}\n                            Creator={video.Creator} image={video.Creator_Image} Views={video.Views}\n                            date={video.Date}/>\n                        </Link>\n                    </li>\n                ))}\n                </ul>\n            </div>\n        );\n\n    }\n    render(){\n      return this.renderVideoRow()\n    }\n\n}\n\nexport default VideoRow;","import React, { Component } from \"react\";\n// import \"./styles.css\";\nimport Cookies from 'js-cookie';\nimport \"../css/EarningsChart.css\"\nimport { Line } from \"react-chartjs-2\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nclass EarningsChart extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataList: []\n        }\n        this.getCreatorPayouts = this.getCreatorPayouts.bind(this)\n        this.getPrevSixMonths = this.getPrevSixMonths.bind(this)\n        this.setData = this.setData.bind(this)\n    }\n    async setData() {\n        this.getCreatorPayouts()\n            .then(() => {\n                return {\n                    labels: this.getPrevSixMonths(),\n                    labelColor: \"red\",\n                    datasets: [\n                        {\n                            data: this.state.dataList,\n                            fill: true,\n                            borderColor: \"rgba(75,192,192,1)\",\n                        }\n                    ]\n                };\n            })\n    }\n    //create chart labels for previous 6 months\n    getPrevSixMonths() {\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\n            \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n        var thisMonth = new Date().getMonth()\n        var labels = [];\n        for (var i = thisMonth - 5; i <= thisMonth; i++) {\n            if (i < 0) {\n                labels.push(months[11 + i])\n            }\n            else {\n                labels.push(months[i])\n            }\n        }\n        return labels;\n    }\n\n    async getCreatorPayouts() {\n        var user = JSON.parse(Cookies.get(\"user\"));\n        const api_route = 'https://degreeme.io/API/GetCreatorPayouts/' + user._id;\n        const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        await fetch(api_route, requestMetadata)\n            .then(response => response.json())\n            .then(result => {\n                this.setState({ dataList: result })\n            })\n    }\n    componentDidMount() {\n        this.setData()\n    }\n    render() {\n        const options = {\n            animation: {\n                duration: 0\n            },\n            layout: {\n                padding: {\n                    right: 40\n                }\n            },\n            tooltips: {\n                callbacks: {\n                    label: function (tooltipItem) {\n                        return tooltipItem.yLabel;\n                    }\n                }\n            },\n            plugins: {\n                legend: {\n                    display: false\n                },\n\n                datalabels: {\n                    anchor: 'end',\n                    align: 'top',\n                    clamp: false,\n                    clip: false,\n                    color: 'white',\n                    font: {\n                        size: 16,\n                        weight: \"bold\"\n                    },\n                    padding: {\n                        right: 20,\n\n                    },\n                    formatter: function (value, context) {\n                        return \"$\" + value.toFixed(2)\n                    },\n                }\n            },\n            scales: {\n                x: {\n                    borderWidth: 10,\n                    borderColor: \"white\",\n                    grid: {\n                        borderColor: \"#202020\",\n                        color: \"#202020\",\n                    }\n                    // display:false\n                },\n                y: {\n                    \n                    min : 0,\n                    grid: {\n                        borderColor: \"#202020\",\n                        color: \"#202020\",\n                    }\n                }\n            },\n\n        };\n        return (\n            <div className=\"line-chart\">\n                <h5 className=\"chart-title\">Monthly Earnings</h5>\n\n                <Line\n                    plugins={[ChartDataLabels]}\n                    options={options}\n                    data={{\n                        labels: this.getPrevSixMonths(),\n                        //   backgroundColor: 'rgb(255, 99, 132)',\n                        opacity: 0.6,\n                        datasets: [\n                            {\n\n                                data: this.state.dataList,\n                                fill: false,\n                                width: 20,\n                                borderColor: \"#40c164\",\n                            }\n                        ]\n                    }\n                    }\n                    height={90}\n                    className=\"react-line-chart\"\n                />\n            </div>\n        );\n    }\n}\nexport default EarningsChart;\n","import React, { Component } from \"react\";\n// import \"./styles.css\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport \"../css/PieChart.css\"\nimport { Pie } from \"react-chartjs-2\";\nclass PercentageOfViewsPieChart extends Component {\n  getChartData() {\n    return (\n      {\n        // labels: ['Your views', 'Other views'],\n        datasets: [\n          {\n            label: 'Rainfall',\n            backgroundColor: [\n              '#8F30A1',\n              '#FE4773',\n            ],\n            hoverBackgroundColor: [\n              '#8F30A1',\n              '#FE4773',\n            ],\n            data: [this.props.percentage.toFixed(2), 100 - this.props.percentage.toFixed(2)]\n          }\n        ]\n      }\n    )\n  }\n  componentDidMount() {\n  }\n  render() {\n\n    return (\n      <div className=\"doughnut-wrapper\">\n        <h5 className=\"chart-title\">Percentage of monthly views</h5>\n\n        <div className=\"doughnut-container\">\n\n          <Pie\n            data={this.getChartData()}\n            plugins={[ChartDataLabels]}\n            options={{\n              animation: {\n                duration: 0\n              },\n              borderWidth: 0,\n              title: {\n                // display:false,\n                text: 'Percentage of Monthly Views',\n                fontSize: 20,\n              },\n              legend: {\n                display: false\n              },\n\n              plugins: {\n                tooltips: {\n                  display: false,\n\n                },\n                datalabels: {\n                  anchor: \"end\",\n                  align: \"middle\",\n                  clamp: true,\n                  offset: 1,\n                  color: 'white',\n                  font: {\n                    size: 23,\n                    weight: \"bold\",\n                    strokeColor: \" black\"\n\n                  },\n                  formatter: function (value, context) {\n                    if (context.dataIndex === 1) {\n                      return \"\";\n                    }\n                    else {\n                      return value + '%';\n                    }\n                  }\n                },\n              }\n\n            }\n\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default PercentageOfViewsPieChart;\n","import React, {Component} from \"react\";\nimport EarningsChart from \"../components/EarningsChart\"\nimport PercentageOfViewsPieChart from \"../components/PercentageOfViewsPieChart\"\n\nimport \"../css/CreatorDashboard.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Cookies from 'js-cookie';\n\n// import bootstrap from \"bootstrap\";\nclass CreatorDashboard extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            allViews: 0,\n            viewsThisMonth:0,\n            percentageOfTotalViews: 0,\n            totalEarnings:0\n        }\n        this.getCreatorTotalViewCount = this.getCreatorTotalViewCount.bind(this)\n        this.getTotalEarnings = this.getTotalEarnings.bind(this)\n    }\n    componentDidMount(){\n        this.getCreatorTotalViewCount()\n        this.getTotalEarnings()\n    }\n    getTotalEarnings(){\n        if(Cookies.get(\"user\") !== null) {\n            var user = JSON.parse(Cookies.get(\"user\"));\n            const api_route = 'https://degreeme.io/API/GetAllEarnings/'+user._id;\n            const requestMetadata = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            };\n            fetch(api_route, requestMetadata)\n            .then(response => response.json())\n                .then(result => {\n                    this.setState({\n                        totalEarnings: result/100\n                    })\n                })\n        }\n    }\n    getCreatorTotalViewCount(){\n        if(Cookies.get(\"user\") !== undefined) {\n            alert(this.props.user)\n            console.log(Cookies.get(\"user\"))\n            alert(Cookies.get(\"user\"))\n            var user = JSON.parse(Cookies.get(\"user\"));\n            const api_route = 'https://degreeme.io/API/GetAllCreatorViews/'+user._id;\n            const requestMetadata = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n                    };\n            fetch(api_route, requestMetadata)\n            .then(response => response.json())\n                .then(result => {\n                    this.setState({\n                        allViews: result[0], \n                        viewsThisMonth: result[1],\n                        percentageOfTotalViews: result[1]/result[3]\n                    })\n                })\n        }\n         \n    }\n    renderCreatorDashboard(){\n        if(this.state.allViews > 0) {\n            return (\n                <div className=\"creator-dashboard selected\">\n\n                                <h3 className=\"text-light creator-stats-label\">Creator Stats</h3>\n                                <ul>\n                                    <li>\n                                        <h2 className=\"text-light dashboard-text\">{this.state.allViews}</h2>\n                                        <p className=\"text-light dashboard-label\">All-time views</p>\n                                    </li>\n                                    <li>\n                                    <h2 className=\"text-light dashboard-text\">{this.state.viewsThisMonth}</h2>\n                                        <p className=\"text-light dashboard-label\">Views this month</p>\n                \n                                    </li>\n                                    <li>\n                                        <h2 className=\"text-light dashboard-text\">${this.state.totalEarnings.toFixed(2)}</h2>\n                                        <p className=\"text-light dashboard-label\"> Total earnings</p>\n                                    </li>\n                                </ul>\n                                <PercentageOfViewsPieChart percentage={this.state.percentageOfTotalViews *100}/>\n\n                                <EarningsChart/>\n                                {/* <p className=\"text-light\">Creator Dashboard</p> */}\n                             \n                            </div>\n                        )\n        }\n        else {\n            return(<div></div>)\n        }\n        \n    }\n    render(){\n        return (\n            <div>\n            {this.renderCreatorDashboard()}\n                \n            </div>\n            );\n    }\n    }\n\nexport default CreatorDashboard;","import React, {Component} from \"react\";\nimport VideoRow from \"../components/VideoRow\";\nimport CreatorDashboard from \"../components/CreatorDashboard\";\nimport Cookies from 'js-cookie';\n\nimport \"../css/Header.css\";\nimport \"../css/Home.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n  Redirect\n} from \"react-router-dom\";\n// import bootstrap from \"bootstrap\";\nclass Home extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      keywords : []\n    }\n    this.getKeywords = this.getKeywords.bind(this)\n  }\n  getKeywords(){\n    if(Cookies.get(\"user\") !== undefined) {\n      var user = {};\n      if(this.props.user._id === undefined) {\n        user = JSON.parse(Cookies.get(\"user\"));\n    }\n    else {\n      user = this.props.user\n    }\n    const api_route = 'https://degreeme.io/API/keywords/'+ user._id;\n    const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n                };\n        fetch(api_route, requestMetadata)\n        .then(response => response.json())\n            .then(result => {\n              var keywords = [];\n              if(result.length > 0){\n              for(var i = 0; i < result.length; i++ ){\n                keywords.push(result[i].Word)\n              } \n              this.setState({\n                keywords: keywords\n              }) \n            }  \n            else{\n              this.setState({\n                keywords: [\"ITSC 1212\", \"ITSC 1213\", \"Calc 1\",\"Calc 2\"]\n              }) \n            }           \n            })\n    }\n    \n   }\n  renderCreatorDashboard(){\n    if(this.props.user._id !== undefined) {\n      return (\n        <CreatorDashboard />\n      );\n    }\n  }\n  componentDidMount(){\n    this.getKeywords();\n  }\n  renderVideoRows(){\n    var user = Cookies.get(\"user\");\n    if(user !== undefined){\n      return (\n        <div className=\"videos-container\">\n              {this.state.keywords.map((keyword, index) => (\n                <li key={index}>\n                  <VideoRow category={keyword}/>\n                </li>\n            ))}\n            </div>\n      )\n    }\n    else {\n      return(\n        <Redirect to=\"/LandingPage\" />\n      )\n    }\n  }\n  render(){\n    return (\n        <div>\n        {this.renderCreatorDashboard()}       \n        {this.renderVideoRows()}\n        </div>\n    );\n  }\n}\n\nexport default Home;","import React, {Component} from \"react\";\nimport '../css/VideoUploader.css';\nimport '../css/Login.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Redirect, Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n           user: {},\n           email:\"\",\n           password:\"\",\n           redirect:false,\n           showError: \"none\",\n           error: \"Username or password incorrect\"\n        };\n\n        this.handleEmailChange = this.handleEmailChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.login = this.login.bind(this)\n        this.renderLoggedIn = this.renderLoggedIn.bind(this)\n        this.showError = this.showError.bind(this)\n    }\n    validateEmail(email) {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n  }\n  showError(){\n      this.setState({showError: \"block\"})\n  }\n  renderLoggedIn(){\n          return(\n<div className=\"login-container\">\n            <h1 className=\"login-title\">Login</h1>\n            <div className=\"login-container-child\">\n            <ul>\n                <li>\n                <div className=\"login-input-container\">\n\n                    <p className=\"login-label\">Email</p>\n                    <input type=\"email\" name =\"Email\" onChange={this.handleEmailChange}/>\n                </div>\n                </li>\n                <li>\n                    <div className=\"login-input-container\">\n                        <p  className=\"login-label\">Password</p>\n                        <input type=\"password\" name =\"Password\" onChange={this.handlePasswordChange}/>\n                    </div>\n                </li>\n                <li>\n                    <button className=\"btn btn-primary login-btn\" onClick={this.login}>Login</button>\n                </li>\n                <li>\n                    <Link to=\"/ResetPassword\">\n                        <p className=\"forgot-pw\">Forgot Password?</p>\n                    </Link>\n                </li>\n                <li>\n                        <Link to=\"/CreateAccount\" className=\"create-account-link btn btn-success\">\n                            Create New Account\n                        </Link>\n                   </li>\n                <li>\n                  <p className=\"error\" style={{display: this.state.showError}}>{this.state.error}</p>\n                </li>\n            </ul>\n            </div>\n        </div>\n          );\n  }\n    login(){\n        var isEmail = this.validateEmail(this.state.email)\n        if(this.state.email === \"\" ||\n        this.state.password === \"\"){\n            this.setState({error: \"Please enter email and password\"})\n            this.showError();\n        }\n        else if(!isEmail){\n            this.setState({error: \"Invalid email format\"})\n            this.showError();\n        }\n        else {\n            const api_route = 'https://degreeme.io/API/Login';\n            const postBody = {\n                Email: this.state.email,\n                Password: this.state.password\n            };\n            const requestMetadata = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postBody),\n            };\n            fetch(api_route, requestMetadata)\n            .then(res => res.json())\n            .then((user)=>{\n                console.log(user)\n                if(!user){\n                    this.setState({error: \"Incorrect email or password\"})\n                    this.showError();\n                }\n                else {\n                    this.props.setUser(user);\n                    this.props.getUnreadCount();\n                    this.setState({redirect: true})\n                    this.props.getUnreadCount()\n                }\n               \n            })\n        }\n       \n    }\n    handleEmailChange(e) {\n        this.setState({email: e.target.value});\n      }\n      handlePasswordChange(e) {\n        this.setState({password: e.target.value});\n      }\n    render(){\n        if(!this.state.redirect){\n            return (\n                <div>\n                    {this.renderLoggedIn()}\n                </div>\n            );\n        \n        }\n        else{\n            return (\n                <Redirect to=\"/Home\" />\n            );\n        }\n  }\n}\n\nexport default LoginForm;","import React, {Component} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../css/CommentInput.css';\nclass CommentInput extends Component {\n    render(){\n        \n        return (\n            <div className=\"comment-input-container\" >\n                <img className=\"user-image\" src={this.props.user.Image} alt=\"User\"/>\n                <input autoComplete=\"off\" type=\"text\" name=\"comment-input\" className=\"comment-input\" placeholder=\"Add comment\" style={{\"borderBottom\": this.props.borderBottom}}\n                    onFocus={this.props.showButtons}  onChange={this.props.HandleCommentChange}\n                    value={this.props.Comment} />\n                <div className=\"comment-buttons\" style={{\"display\":this.props.show}}>\n                    <ul>\n                        <li>\n                        <button className =\"btn-secondary\" onClick={this.props.CancelComment}>\n                            Cancel\n                        </button>\n                        </li>\n                        <li onClick={this.props.AddComment}>\n                            <button className =\"btn-primary\">\n                                Comment\n                            </button>\n                        </li>\n                    </ul>\n                </div>\n            </div>           \n        );\n  }\n}\n\nexport default CommentInput;","import React, {Component} from \"react\";\nimport \"../css/VideoRow.css\";\nimport \"../css/Comments.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport FormatDate from \"../GlobalFunctions/FormatDate\";\nvar formatDate = new FormatDate()\nclass Video extends Component {\n    render(){\n        return (\n            <div className=\"comment-item\">\n                <p className=\"comment-date\">{formatDate.displayDate(new Date(this.props.Date))}</p>\n\n                <div className=\"comment-user\">\n                    <img className=\"user-image\" src={this.props.Image} alt=\"User\"/>\n                    <span className=\"comment-username\">{this.props.Creator}</span>\n                </div>\n                <p className=\"comment-msg\">{this.props.Message}</p>\n            </div>\n                        \n        );\n  }\n}\n\nexport default Video;","import React, {Component} from \"react\";\nimport \"../css/VideoActions.css\";\nimport \"../css/VideoModal.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Modal from \"react-bootstrap/Modal\";\nimport CreateAccount from \"../components/CreateAccount\"\nimport \"tippy.js/dist/tippy.css\"\n\nclass CreateAccountModal extends Component {\n  render(){\n    return (\n    <div className=\"video-actions\">\n      <Modal centered show={this.props.isOpen} onHide={this.props.hideModal}\n      className=\"share-modal\">\n        <Modal.Header>\n          <Modal.Title>\n              <p className=\"close-modal\" onClick={this.props.hideModal}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" fill=\"white\" className=\"bi bi-x\" viewBox=\"0 0 16 16\">\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n            </svg>\n              </p>\n\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <CreateAccount />\n        </Modal.Body>\n        <Modal.Footer>\n        </Modal.Footer>\n      </Modal>\n      \n        </div>\n    );\n  }\n}\n\nexport default CreateAccountModal;","import React, {Component} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../css/Comments.css';\nimport CommentInput from \"../components/CommentInput\"\nimport Comment from \"../components/Comment\"\nimport CreateAccountModal from \"../components/CreateAccountModal\";\nimport htmlDecode from \"../GlobalFunctions/HTMLDecode\";\nvar decode = new htmlDecode();\nclass CommentList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments : [],\n            comment:\"\",\n            showButtons:\"none\",\n            borderBottom: \"2px solid #d4d4d4\",\n        }\n        this.addComment = this.addComment.bind(this)\n        this.handleCommentChange = this.handleCommentChange.bind(this)\n        this.cancelComment = this.cancelComment.bind(this)\n        this.showButtons = this.showButtons.bind(this)\n        this.getComments = this.getComments.bind(this)\n    }\n    //show cancel/add comment buttons\n    showButtons(){\n        this.setState({borderBottom: \"2px solid #007bff\",\n        showButtons: \"block\"})\n    }\n    addComment() {\n        if(this.props.user._id === undefined) {\n            //show modal\n            this.props.showModal();\n        }\n        else {\n            if(this.state.comment !== \"\"){\n                const api_route = 'https://degreeme.io/API/AddComment';\n                const postBody = {\n                    Video_Id: this.props.VideoId,\n                    User_Id: this.props.user._id,\n                    Message: this.state.comment\n                };\n                const requestMetadata = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(postBody)\n                };\n                fetch(api_route, requestMetadata)\n                .then(res => res.json())\n                .then((comment)=>{\n                  var newCommentsArray = [];\n                  newCommentsArray = this.state.comments;\n                  console.log(newCommentsArray)\n                  newCommentsArray.unshift(comment)\n                  this.setState({comments: newCommentsArray,\n                    borderBottom:\"2px solid #d4d4d4\",\n                    showButtons:\"none\",\n                    comment: \"\"\n                })\n                })\n                .catch((err)=>{\n                })\n            }\n        }\n        \n        \n    }\n    handleCommentChange(e){\n        this.setState({comment: e.target.value});\n    }\n    cancelComment(){\n        this.setState({comment: \"\", borderBottom:\"2px solid #d4d4d4\",\n            showButtons:\"none\"});\n    }\n    componentDidUpdate(prevProps) {\n        if(prevProps.VideoId !== this.props.VideoId){\n            this.getComments();\n          }\n    }\n    getComments(){\n        // alert(window.location.href.split(\"/\")[4])\n        const api_route = 'https://degreeme.io/API/Comments/'+this.props.VideoId;\n        const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        };\n        fetch(api_route, requestMetadata)\n        .then(res => res.json())\n        .then((result)=>{\n            this.setState({comments: result})\n        })\n        .catch((err)=>{\n        });\n    }\n    componentDidMount(){\n        this.getComments();\n    }\n    render(){\n        return (\n            <div className=\"comment-list\">\n                <CreateAccountModal isOpen={this.props.isOpen}\n                hideModal={this.props.hideModal}/>\n                <CommentInput AddComment={this.addComment}\n                show={this.state.showButtons} \n                showButtons={this.showButtons}\n                borderBottom={this.state.borderBottom}\n                CancelComment = {this.cancelComment}\n                HandleCommentChange = {this.handleCommentChange}\n                Comment={this.state.comment}\n                user={this.props.user}/>\n                {this.state.comments.map((comment, index) => (\n                    <li key={index}>\n                        <Comment \n                            Image={decode.htmlDecode(comment.Author_Img)}\n                            Creator={comment.Author_First_Name + \" \" + comment.Author_Last_Name} \n                            Message={decode.htmlDecode(comment.Message)}\n                            Date={comment.Date}\n                        />\n                    </li>\n                    \n                ))}\n            </div>          \n        );\n  }\n}\n\nexport default CommentList;","import React, {Component} from \"react\";\nimport \"../css/VideoActions.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Modal from \"react-bootstrap/Modal\";\nimport Tippy from \"@tippy.js/react\";\nimport \"tippy.js/dist/tippy.css\"\n\nclass VideoActions extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isOpen:false,\n            showLikedMsg: \"none\"\n        }\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n    }\n    showModal = () => {\n      this.setState({isOpen: true});\n    };\n    \n    hideModal = () => {\n        this.setState({isOpen: false});\n    };\n    copyToClipboard(){\n        navigator.clipboard.writeText(window.location.href)\n    }\n  render(){\n      \n    return (\n    <div className=\"video-actions\">\n      <Modal centered show={this.state.isOpen} onHide={this.hideModal}\n      className=\"share-modal\">\n        <Modal.Header>\n          <Modal.Title>\n              Share Video\n              <p className=\"close-modal\" onClick={this.hideModal}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" fill=\"white\" className=\"bi bi-x\" viewBox=\"0 0 16 16\">\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n            </svg>\n              </p>\n\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <span className=\"copy-link\">{ window.location.href }</span>\n            <Tippy content=\"Copy To Clipboard\">\n                <span className=\"copy-btn\" onClick={this.copyToClipboard}>COPY</span>\n            </Tippy>\n        </Modal.Body>\n        <Modal.Footer>\n        </Modal.Footer>\n      </Modal>\n      \n            <ul>\n                <li onClick={this.props.addLike}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" fill=\"currentColor\" className=\"bi bi-hand-thumbs-up-fill\" viewBox=\"0 0 16 16\">\n                        <path d=\"M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a9.84 9.84 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733.058.119.103.242.138.363.077.27.113.567.113.856 0 .289-.036.586-.113.856-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.163 3.163 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16H8c-.605 0-1.07-.081-1.466-.218a4.82 4.82 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z\"/>\n                    </svg>\n                    {this.props.Likes}\n                    <p className=\"already-liked\" style={{display: this.props.showLikedMsg}}>Already Liked</p>\n                </li>\n                <li onClick={this.showModal}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" fill=\"currentColor\" className=\"bi bi-share-fill\" viewBox=\"0 0 16 16\">\n                        <path d=\"M11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.499 2.499 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5z\"/>\n                    </svg>\n                    Share\n                </li>\n                \n            </ul>\n        </div>\n    );\n  }\n}\n\nexport default VideoActions;","export default __webpack_public_path__ + \"static/media/Video_Sub.11d3a8c4.svg\";","import React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"../css/Upgrade.css\"\nimport Video_Sub from \"../images/Video_Sub.svg\"\nimport { CardElement, Elements, ElementsConsumer } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass UpgradeAccount extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showCardInput: true,\n      cardComplete: false,\n      loading: false,\n      loadStarted: false,\n      progressText: \"Adding payment method\",\n      paymentSubmitted: false,\n      containsInUsePaymentMethod: false,\n      customer: {}\n    }\n    this.showCardInput = this.showCardInput.bind(this);\n    this.hideCardInput = this.hideCardInput.bind(this);\n    this.submitPaymentMethod = this.submitPaymentMethod.bind(this);\n    this.showLoader = this.showLoader.bind(this)\n    this.showProcessText = this.showProcessText.bind(this)\n    this.renderUpgradeContent = this.renderUpgradeContent.bind(this)\n    this.getStripeCustomer = this.getStripeCustomer.bind(this);\n\n  }\n  componentDidMount(){\n    this.getStripeCustomer()\n  }\n  submitPaymentMethod(user) {\n    this.setState({ progressText: \"Adding subscription\" })\n    const api_route = 'https://degreeme.io/API/AttachPaymentMethod';\n    const postBody = {\n      UserId: user._id,\n      PaymentMethodId: this.state.paymentMethod.id\n    };\n    const requestMetadata = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postBody)\n    };\n    fetch(api_route, requestMetadata)\n      .then(res => res.json())\n      .then((res) => {\n        if (res !== \"error\") {\n          this.props.setUser(res)\n          this.setState({\n            loading: false, progressText: \"Successfully subscribed\",\n            paymentSubmitted: false\n          })\n        }\n      })\n  }\n  handleSubmit = async (elements, stripe, hasDefault) => {\n    if(hasDefault) {\n      this.addSubscription();\n    }\n    else {\n    this.setState({\n      loading: true, loadStarted: true,\n      progressText: \"Adding payment method\",\n      paymentSubmitted: true\n    })\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n    const cardElement = elements.getElement(CardElement);\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      this.setState({ paymentMethod: paymentMethod, progressText: \"Payment method added\" });\n      this.submitPaymentMethod(this.props.user);\n    }\n  }\n  };\n  validateStripeCard = (elements) => {\n    const cardElement = elements.getElement(CardElement);\n    cardElement.on('change', (event) => {\n      if (event.complete) {\n        this.setState({ cardComplete: true })\n      } else {\n        this.setState({ cardComplete: false })\n      }\n\n    });\n  }\n  loadStripe() {\n    return loadStripe('pk_test_89vfyOdmTWo09jkpoyAnRy1l00ll36NLGn');\n  }\n  addSubscription(){\n   \n    this.setState({\n      loading: true, \n      loadStarted: true,\n      progressText: \"Adding Subscription\",\n      paymentSubmitted: true\n    })\n    var user = JSON.parse(Cookies.get(\"user\"));\n    const api_route = 'https://degreeme.io/API/AddSubscription';\n        const postBody = {\n            UserId: user._id\n        };\n        const requestMetadata = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postBody),\n        };\n        fetch(api_route, requestMetadata)\n        .then(res => res.json())\n        .then((result)=>{\n          console.log(\"result: \",result)\n          this.props.setUser(result)\n          this.setState({\n            loading: false, \n            loadStarted: false ,\n            progressText: \"Subscription Added\",\n            paymentSubmitted: true\n          })\n        })\n}\n  //controls card input display\n  renderCard(elements, stripe, hasDefault) {\n    if(hasDefault){\n      return (\n        <div>\n          <button className=\"btn btn-primary upgrade-btn\"\n          disabled={!stripe || this.state.paymentSubmitted}\n          onClick={() => this.handleSubmit(elements, stripe, hasDefault)}>Upgrade</button>\n      </div>\n      )\n     \n    }\n    else {\n    return (\n      <div >\n        <div className=\"card-input-container\">\n          <CardElement\n            onChange={() => this.validateStripeCard(elements)}\n            options={{\n              style: {\n                base: {\n                  fontSize: '16px',\n                  color: 'white',\n                  '::placeholder': {\n                    color: '#aab7c4',\n                  },\n                },\n                invalid: {\n                  color: '#9e2146',\n                },\n              },\n            }}\n          />\n          <button className=\"btn btn-primary upgrade-btn\"\n            disabled={!stripe || !this.state.cardComplete || this.state.paymentSubmitted}\n            onClick={() => this.handleSubmit(elements, stripe, hasDefault)}>Upgrade</button>\n        </div>\n\n      </div>\n    );\n          }\n  }\n\n  showCardInput() {\n    this.setState({ showCardInput: true })\n  }\n  hideCardInput() {\n    this.setState({ showCardInput: false })\n  }\n  showLoader() {\n    if (this.state.loading) {\n      return (\n        <div>\n          <div className=\"loader\"></div>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className=\"placeholder\"></div>\n      )\n    }\n  }\n  showProcessText() {\n    if (this.state.loadStarted) {\n      return (\n        <div>\n          <p className=\"text-light processText\">{this.state.progressText}</p>\n        </div>\n      )\n    }\n  }\n  getStripeCustomer() {\n    return new Promise((resolve, reject) => {\n      var user = JSON.parse(Cookies.get(\"user\"));\n      const api_route = 'https://degreeme.io/API/GetStripeCustomer/' + user._id;\n      const requestMetadata = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      };\n      fetch(api_route, requestMetadata)\n        .then(response => response.json())\n        .then(result => {\n          if (result.invoice_settings.default_payment_method === null) {\n            this.setState({ containsInUsePaymentMethod: false })\n            resolve(false)\n          }\n          else {\n            this.setState({ containsInUsePaymentMethod: true })\n            resolve(true)\n          }\n         \n        })\n    })\n  }\n\n  renderCardInput() {\n        if (this.state.containsInUsePaymentMethod) {\n          return (\n            <div className=\"upgrade-card-input\">\n            <Elements stripe={this.loadStripe()}>\n              <ElementsConsumer>\n                {({ elements, stripe }) => (\n                  this.renderCard(elements, stripe,\n                    this.state.containsInUsePaymentMethod)\n                )}\n              </ElementsConsumer>\n            </Elements>\n          </div>\n          );\n        }\n        else {\n          return (\n            <div className=\"upgrade-card-input\">\n              <Elements stripe={this.loadStripe()}>\n                <ElementsConsumer>\n                  {({ elements, stripe }) => (\n                    this.renderCard(elements, stripe,\n                      this.state.containsInUsePaymentMethod)\n                  )}\n                </ElementsConsumer>\n              </Elements>\n            </div>\n          )\n        }\n  }\n  renderUpgradeContent() {\n    if(Cookies.get(\"user\") !== undefined) {\n\n    \n    var user = JSON.parse(Cookies.get(\"user\"));\n    if (user.Subscription_Level === \"Free Tier\") {\n      return (\n        <div className=\"upgrade-acct\">\n          <p className=\"limit-reached badge badge-warning\">{this.props.limit_message}</p>\n          <h1 className=\"text-light upgrade-title\">Go Pro</h1>\n          <p className=\"text-light upgrade-text\">Get unlimited access to DegreeMe content\n            for $8/month</p>\n          <div>\n            <img className=\"upgrade-img\" src={Video_Sub} alt=\"Upgrade\"/>\n          </div>\n          {this.renderCardInput()}\n          {/* {this.showLoader()} */}\n          {this.showProcessText()}\n        </div>\n      );\n    }\n    else {\n      return (\n        <Redirect to=\"/Home\" />\n      )\n    }\n  }\n  else {\n    return (\n      <Redirect to=\"/Home\" />\n    )\n  }\n  }\n  render() {\n    return (\n      this.renderUpgradeContent()\n    );\n  }\n}\nexport default UpgradeAccount;","import React, {Component} from \"react\";\nimport \"../css/SingleVideo.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport CommentList from \"../components/CommentList\"\nimport VideoActions from \"../components/VideoActions\";\nimport UpgradeAccount from \"../components/UpgradeAccount\";\nimport Cookies from 'js-cookie';\nimport ReactPlayer from \"react-player\";\nimport HtmlDecode from \"../GlobalFunctions/HTMLDecode\"\nimport {\n    Link, Redirect\n  } from \"react-router-dom\";\nvar decode = new HtmlDecode();\n\n\nclass SingleVideo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            video: {},\n            user: this.props.user,\n            likeCount:0,\n            duration:0,\n            viewText: \"views\",\n            showLikedMsg: \"none\",\n            isOpen:false,\n            secondsStartTime:0,\n            secondsEndTime:0,\n            videoLoaded: false\n        }\n        this.getVideo = this.getVideo.bind(this)\n        this.addLike = this.addLike.bind(this)\n        this.addView = this.addView.bind(this);\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n        this.startTime = this.startTime.bind(this)\n        this.endTime = this.endTime.bind(this);\n        this.setUserState = this.setUserState.bind(this)\n        this.renderVideo = this.renderVideo.bind(this)\n    }\n    showModal = () => {\n        this.setState({isOpen: true});\n      };\n      \n      hideModal = () => {\n          this.setState({isOpen: false});\n      };\n    componentDidMount(){\n        this.mounted = true\n        if (this.mounted) {\n            this.getVideo()\n            this.setUserState()\n            this.setState({VideoId: this.state.video._id})\n        }\n    }\n    componentWillUnmount() {\n        this.mounted = false\n    }\n    addView(){\n        //do not add view if the viewer is also Creator\n        setTimeout(()=>{\n            const api_route = 'https://degreeme.io/API/AddView';\n            var userId = \"none\"\n            if(this.props.user._id !== undefined){\n                userId = this.props.user._id;\n            }\n            const postBody = {\n                UserId: userId,\n                CreatorId: this.state.video.Creator_Id,\n                VideoId: this.state.video._id,\n            };\n            const requestMetadata = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postBody),\n            };\n            fetch(api_route, requestMetadata)\n            .then(res => res.json())\n            .then((res)=>{\n                if(res === 1){\n                    this.setState({ views:res,\n                        viewText: \"view\"})\n                }\n                else if(res !== false) {\n                    this.setState({ views:res,\n                        viewText: \"views\"})\n                }\n            })\n        }, 30000)\n    }\n    addLike(){\n        if(this.props.user._id === undefined) {\n            //show modal\n            this.setState({isOpen: true})\n        }\n        else {\n            const api_route = 'https://degreeme.io/API/AddLike';\n            const postBody = {\n                Creator_Id:this.state.video.Creator_Id,\n                VideoId: this.state.video._id,\n                UserId: this.props.user._id\n            };\n            const requestMetadata = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postBody),\n            };\n            fetch(api_route, requestMetadata)\n            .then(res => res.json())\n            .then((res)=>{\n                if(res !== false) {\n                    var likeCount = this.state.likeCount;\n                    likeCount++;\n                    this.setState({likeCount: likeCount});\n                    //do not increment notif count every time user likes a video\n                    // this.props.showUnreadCount();\n                }\n                else{\n                    const api_route = 'https://degreeme.io/API/RemoveLike';\n                    const postBody = {\n                        VideoId: this.state.video._id,\n                        UserId: this.props.user._id\n                    };\n                    const requestMetadata = {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(postBody),\n                    };\n                    fetch(api_route, requestMetadata)\n                    .then(res => res.json())\n                    .then((res)=>{\n                        if(res.deletedCount === 1) {\n                            var likeCount = this.state.likeCount;\n                            likeCount--;\n                            this.setState({likeCount: likeCount});                    }\n                    })\n                }\n            })\n        }\n        \n    }\n    componentDidUpdate(prevProps) {\n        //if props are updated, get the new video\n        if(prevProps.match.params.id !== this.props.match.params.id){\n          this.getVideo();\n        }\n      }\n    getVideo(){\n        let id = this.props.match.params.id\n        const api_route = 'https://degreeme.io/API/Video/'+ id;\n        const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n                };\n        fetch(api_route, requestMetadata)\n        .then(response => response.json())\n            .then(result => {\n                if(result === \"err\") {\n                    this.setState({video: {}, views:0,\n                        viewText: \"view\",\n                    videoLoaded: true})  \n                }\n                else if(result.Views === 1){\n                    this.setState({video: result, views:result.Views,\n                        viewText: \"view\",\n                        videoLoaded: true})\n                }\n                else {\n                    this.setState({video: result, views:result.Views,\n                    viewText: \"views\"})\n                }\n                this.addView()\n                if(this.state.video.Likes){\n                    this.setState({likeCount: this.state.video.Likes.length})\n                }\n            })\n    }\n    startTime() {\n        this.setState({secondsStartTime: new Date()})\n    };\n      \n      endTime() {\n        this.setState({secondsEndTime: new Date()});\n        var timeDiff = this.state.secondsEndTime - this.state.secondsStartTime; //in ms\n        // strip the ms\n        timeDiff /= 1000;\n      \n        // get seconds \n        var seconds = Math.round(timeDiff);\n        this.updateSecondsViewed(seconds)\n      }\n      //function runs twice when video ends\n    updateSecondsViewed(secondsToAdd){\n        if(this.props.user.Subscription_Level === \"Free Tier\") {\n        const api_route = 'https://degreeme.io/API/UpdateFreeTierSeconds';\n                const postBody = {\n                    UserId: this.props.user._id,\n                    secondsToAdd: secondsToAdd,\n                };\n                const requestMetadata = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(postBody),\n                };\n                fetch(api_route, requestMetadata)\n                .then(res => res.json())\n                .then((res)=>{\n                    this.props.setUser(res);\n                })\n            }\n    }\n    setUserState(){\n        if(this.props.user._id!== undefined) {\n            this.setState({user: this.props.user});\n        }\n        else{\n            this.setState({user: JSON.parse(Cookies.get(\"user\"))});\n        }\n    }\n    renderVideo(){\n        var user = this.props.user;\n        if(this.props.user._id === undefined) {\n            user = JSON.parse(Cookies.get(\"user\"))\n        }\n        if(user._id === undefined) {\n            return(\n                <Redirect to=\"/CreateAccount\" />            )\n        }\n        else if(this.state.video._id === undefined && this.state.videoLoaded){\n            return (<h2 className=\"text-light oops-video\">Oops! Video not found</h2>)\n        }\n        else if((user.Subscription_Level !== \"Free Tier\" ||\n        this.props.user.Free_Tier_Seconds < 600 || this.props.user.Free_Tier_Seconds === undefined )\n        ) {\n            return (\n                <div className=\"single-video\">\n                        <div className=\"single-video-frame\">\n                        <ReactPlayer \n                            url={decode.htmlDecode(this.state.video.Link)}\n                            onDuration={this.duration}\n                            controls\n                            width=\"100%\"\n                            height=\"auto\"\n                            playing\n                            onPlay={()=> this.startTime()}\n                            onPause={()=>this.endTime()}\n                        />\n                        </div>\n                        <div>\n                        <p className=\"single-video-title\">{this.state.video.Title} </p>\n                        <div className=\"video-actions-list\">\n                            <p className=\"single-view-count\">{this.state.views + \" \" + this.state.viewText} </p>\n                            <VideoActions Likes={this.state.likeCount} \n                            addLike={this.addLike} showLikedMsg={this.state.showLikedMsg}\n                            />\n                        </div>\n                            <div className=\"sub-details\">\n                                <div className=\"single-creator-name\">\n                                    <Link to={\"/User/\"+this.state.video.Creator_Id}>\n                                        <img className=\"user-image\" src={this.state.video.Creator_Image} alt=\"Creator\"/>\n                                        <span className=\"creator-text\">{this.state.video.Creator}</span>\n                                    </Link>\n                                </div>\n                            </div>\n                            <p className=\"creator-label\">Creator</p>\n                            <p className=\"description-label\">Description</p>\n                            <p className=\"text-light video-description\">{this.state.video.Description}</p>\n                        </div>\n                        <CommentList VideoId={this.state.video._id} \n                        isOpen={this.state.isOpen} hideModal={this.hideModal}\n                        showModal={this.showModal}\n                        user={this.props.user}/>\n                </div>           \n            );\n        }\n        else {\n            return(\n                <div>\n                    <UpgradeAccount user={this.props.user}\n                    setUser={this.props.setUser} limit_message=\"Sorry, you reached the 10 minute\n                    free tier limit.\" />\n                </div>\n            );\n        }\n    }\n    render(){\n       return this.renderVideo()   \n  }\n}\n\nexport default SingleVideo;","import React, {Component} from \"react\";\n// import \"../css/VideoRow.css\";\nimport Video from \"../components/Video\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Link } from 'react-router-dom';\n\nclass UserVideos extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videos: []\n        }\n        this.getUserVideos = this.getUserVideos.bind(this)\n        \n    }\n    getUserVideos(){\n        const api_route = 'https://degreeme.io/API/GetUserVideos/'+window.location.href.split(\"/\")[4];\n        const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n                };\n        fetch(api_route, requestMetadata)\n        .then(response => response.json())\n            .then(result => {\n                this.setState({videos: result})\n            })\n      }\n    componentDidMount(){\n        this.getUserVideos();\n    }\n    render(){\n        return (\n            <div className=\"video-row\">\n                <h1 className=\"text-light category\">{this.props.category}</h1>\n                <ul>\n                    \n                {this.state.videos.map((video, index) => (\n                   \n                    <li key={index}>\n                        <Link to={\"/Video/\"+video._id}>\n                            <Video Id={video._id} Title={video.Title} Thumbnail ={video.Thumbnail}\n                            Creator={video.Creator} Views={video.Views} image={video.Creator_Image}\n                            date={video.Date}/>\n                        </Link>\n                    </li>\n                ))}\n                </ul>\n            </div>\n        );\n  }\n}\n\nexport default UserVideos;","import React, {Component} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/ReviewModal.css\";\nclass ReviewModal extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isOpen: false,\n      message: \"\", \n      rating: 0,\n      reviewMsgColor: \"text-success\",\n      showReviewMsg: \"none\",\n      reviewMsg: \"Review submitted successfully\"\n    }\n    this.addReview = this.addReview.bind(this)\n    this.showModal = this.showModal.bind(this)\n    this.hideModal = this.hideModal.bind(this)\n    this.handleMessageChange = this.handleMessageChange.bind(this)\n    this.handleRatingChange = this.handleRatingChange.bind(this)\n\n  }\n  showModal(){\n    this.setState({isOpen: true})\n  }\n  hideModal(){\n    this.setState({isOpen: false})\n  }\n  handleMessageChange(e){\n    this.setState({message: e.target.value})\n  }\n  handleRatingChange(e){\n    this.setState({rating: e.target.value})\n  }\n  addReview(){\n    const api_route = 'https://degreeme.io/API/AddReview';\n          const postBody = {\n              Creator_Id: window.location.href.split(\"/\")[4],\n              User_Id: this.props.user._id,\n              Message:this.state.message,\n              Rating: this.state.rating\n          };\n          const requestMetadata = {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(postBody),\n          };\n          fetch(api_route, requestMetadata)\n          .then(res => res.json())\n          .then((res)=>{\n            if(!res){\n              this.setState(\n                {reviewMsg: \"You can only leave a creator one review per month\",\n                reviewMsgColor: \"text-danger\"});\n            }\n            else {\n              this.setState(\n                {reviewMsg: \"Review submitted succesffully\",\n                reviewMsgColor: \"text-success\"});\n            }\n            this.setState({showReviewMsg: \"block\"})\n            setTimeout(()=>{\n              this.hideModal();\n            }, 2000)\n           \n          });\n  }\n  render(){\n    return(\n      <div>\n      <button className=\"btn btn-primary leave-review\" onClick={this.showModal}>Leave Review</button>\n      <Modal show={this.state.isOpen} onHide={this.hideModal} >\n        <Modal.Header>\n        {/* <button className=\"btn-danger\" onClick={hideModal}>X</button> */}\n          <Modal.Title>Leave a Review\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        \n            <textarea onChange={this.handleMessageChange}placeholder=\"Write your review\" className=\"review-message\"></textarea>\n            <p className=\"rating-label\">Rating</p>\n              <div id=\"ratingContainer\">\n                <div className=\"rating\">\n                  <input type=\"radio\" className=\"starVal\" name=\"star\" id=\"star1\" value=\"5\" onChange={this.handleRatingChange} /><label htmlFor=\"star1\"></label>\n                  <input type=\"radio\" className=\"starVal\" name=\"star\" id=\"star2\" value=\"4\" onChange={this.handleRatingChange}/><label htmlFor=\"star2\"></label>\n                  <input type=\"radio\" className=\"starVal\" name=\"star\" id=\"star3\" value=\"3\" onChange={this.handleRatingChange}/><label htmlFor=\"star3\"></label>\n                  <input type=\"radio\" className=\"starVal\" name=\"star\" id=\"star4\" value=\"2\" onChange={this.handleRatingChange}/><label htmlFor=\"star4\"></label>\n                  <input type=\"radio\" className=\"starVal\" name=\"star\" id=\"star5\" value=\"1\" onChange={this.handleRatingChange}/><label htmlFor=\"star5\"></label>\n                </div>\n              </div>\n              <button className=\"btn btn-primary rating-btn\" onClick={this.addReview}>Submit Review</button>\n              <p className={this.state.reviewMsgColor + \" reviewMsg\"} style={{display: this.state.showReviewMsg}} >{this.state.reviewMsg}</p>\n        </Modal.Body>\n        <Modal.Footer>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n  }\n}\nexport default ReviewModal;","import React, {Component} from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport FormatDate from \"../GlobalFunctions/FormatDate\";\nimport \"../css/Review.css\";\nimport HTMLDecode from \"../GlobalFunctions/HTMLDecode\";\nvar htmlDecoder = new HTMLDecode();\nvar formatDate = new FormatDate();\n// import ReactPlayer from \"react-player\";\n\nclass Review extends Component {\n    render(){\n        var stars = [];\n        for (var x = 0; x < this.props.Rating; x++) {\n            stars.push(<li><span className='star'></span></li>)\n        }\n        return (\n            <div className=\"review-item\" >\n                    <p className =\"review-name\">\n                        <img className=\"review-avatar\" src={htmlDecoder.htmlDecode(this.props.Image)} alt=\"Review avatar\"/>\n                        {this.props.Name}\n                        </p>\n                        <ul className=\"starsList\">\n                            {stars.map((star, index) => (\n                                star\n                            ))}\n                        </ul>\n                       \n\n    \n                    <p>{htmlDecoder.htmlDecode(this.props.Message)}</p>\n                    <p className=\"date\">{formatDate.displayTimeSince(this.props.Date)}</p>\n            </div>        \n        );\n  }\n}\n\nexport default Review;","import React, {Component} from \"react\";\nimport \"../css/Review.css\";\nimport Review from \"../components/Review\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass ReviewsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reviews: []\n        }\n        this.getUserReviews= this.getUserReviews.bind(this)\n        \n    }\n    getUserReviews(){\n        const api_route = 'https://degreeme.io/API/GetUserReviews/'+window.location.href.split(\"/\")[4];\n        const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n                };\n        fetch(api_route, requestMetadata)\n        .then(response => response.json())\n            .then(result => {\n                this.setState({reviews: result})\n            })\n      }\n    componentDidMount(){\n        this.getUserReviews();\n    }\n    render(){\n        return (\n            <div className=\"review-row\">\n                <h1 className=\"text-light category\">{this.props.category}</h1>\n                <ul className=\"reviews-list\">\n                    \n                {this.state.reviews.map((review, index) => (\n                   \n                    <li>\n                        <Review Name={review.Author_First_Name + \n                        \" \" + review.Author_Last_Name} \n                        Rating={review.Rating} \n                        Message={review.Message} \n                        Date={review.Date}\n                        Image={review.Author_Img}/>\n                    </li>\n                ))}\n                </ul>\n            </div>\n        );\n  }\n}\n\nexport default ReviewsList;","import React, {Component} from \"react\";\n// import \"../css/User.css\";\nimport VideoList from \"../components/VideoList\";\nimport ReviewModal from \"../components/ReviewModal\"\nimport ReviewsList from \"../components/ReviewsList\"\nimport 'bootstrap/dist/css/bootstrap.css';\nimport htmlDecode from '../GlobalFunctions/HTMLDecode'\nvar decode = new htmlDecode();\nclass User extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user:{},\n      content:\"videos\",\n      videosBorder: \"2px solid #007bff\",\n      reviewsBorder: \"0\"\n    }\n    this.handleContentChange = this.handleContentChange.bind(this)\n    this.getUser = this.getUser.bind(this)\n  }\n  componentDidMount(){\n    this.getUser()\n  }\n  handleContentChange(){\n\n    if(this.state.content === \"videos\"){\n      this.setState({content: \"reviews\", \n      videosBorder:\"none\", reviewsBorder: \"2px solid #007bff\"})\n    }\n    else{\n      this.setState({content: \"videos\", \n      videosBorder:\"2px solid #007bff\", reviewsBorder: \"none\"})\n    }\n  }\n  renderContent(){\n    if(this.state.content === \"videos\") {\n      return(\n        <div className=\"user-content-container\">\n          <VideoList videos={this.state.user.Videos}/>\n        </div>\n      )\n    }\n    else {\n      return(\n        <div className=\"user-content-container\">\n          <ReviewsList />\n        </div>\n      )\n    }\n  }\n  getUser(){\n    let id = this.props.match.params.id\n    const api_route = 'https://degreeme.io/API/GetUser/'+id;\n    const requestMetadata = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n            };\n    fetch(api_route, requestMetadata)\n    .then(response => response.json())\n        .then(result => {\n            this.setState({user: result})\n        })\n  }\n\n  render(){\n    if(this.state.user._id !== undefined){\n\n  \n    var bio = \"\";\n    if(this.state.user.Bio !== undefined) {\n      bio = this.state.user.Bio;\n    }\n    \n    return (\n        <div>\n            <div className=\"profile-header\">\n                <img className=\"user-profile-image\" src={this.state.user.Image} alt=\"User\"/>\n                <p className=\"user-profile-name\">{decode.htmlDecode(this.state.user.First_Name + \" \" + this.state.user.Last_Name)}</p>\n                <p className=\"profile-bio\">{decode.htmlDecode(bio)}</p>\n                <ReviewModal user={this.props.user}/>\n            </div>\n            <ul className=\"actions-list\" >\n              <li onClick={this.handleContentChange} style={{borderBottom: this.state.videosBorder}}>            \n                <h2 className=\"text-light video-label\" >Videos</h2>\n            </li>\n            <li onClick={this.handleContentChange} style={{borderBottom: this.state.reviewsBorder}}>\n              <h2 className=\"text-light video-label\" >Reviews</h2>\n            </li>\n            </ul>\n            <div className=\"profile-video-container\">\n              {this.renderContent()}  \n            </div>\n        </div>\n    );\n  }\n  else{\n    return(\n      <h2 className=\"text-light oops-user\">Oops! User not found</h2>\n    )\n  }\n  }\n}\nexport default User;","import React, {Component} from \"react\";\nimport Avatar from 'react-avatar-edit'\nimport '../css/AvatarCropper.css';\nimport firebase from \"firebase/app\";\nimport 'firebase/storage';\nimport Cookies from 'js-cookie';\n\nclass AvatarCropper extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n          preview: null,\n          src: \"\",\n          showPreview: \"none\",\n          showUploadingText: \"none\",\n          uploadingText: \"Updating your avatar\"\n        }\n        this.onCrop = this.onCrop.bind(this)\n        this.onClose = this.onClose.bind(this)\n        this.readImage = this.readImage.bind(this)\n        this.onBeforeFileLoad = this.onBeforeFileLoad.bind(this)\n      }\n      \n      onClose() {\n        this.setState({preview: null,\n        showPreview: \"none\"})\n      }\n      \n      onCrop(preview) {\n        this.setState({preview: preview, showPreview: \"block\"})\n        if(this.setState.preview !== null){\n            this.setState({showPreview: \"block\"})\n        }\n       \n      }\n       base64ImageToBlob(str) {\n        // extract content type and base64 payload from original string\n        var pos = str.indexOf(';base64,');\n        var type = str.substring(5, pos);\n        var b64 = str.substr(pos + 8);\n      \n        // decode base64\n        var imageContent = atob(b64);\n        // create an ArrayBuffer and a view (as unsigned 8-bit)\n        var buffer = new ArrayBuffer(imageContent.length);\n        var view = new Uint8Array(buffer);\n      \n        // fill the view, using the decoded base64\n        for (var n = 0; n < imageContent.length; n++) {\n          view[n] = imageContent.charCodeAt(n);\n        }\n      \n        // convert ArrayBuffer to Blob\n        var blob = new Blob([buffer], { type: type });\n      \n        return blob;\n      }\n      onBeforeFileLoad(elem) {\n        if(elem.target.files[0].size > 10000000){\n          alert(\"File is too big!\");\n          elem.target.value = \"\";\n        };\n      }\n      postImageToDB(userId, avatar){\n          return new Promise((resolve, reject)=>{\n            const api_route = 'https://degreeme.io/API/UpdateAvatar';\n            const postBody = {\n                userId: userId,\n                avatar: avatar,\n            };\n            const requestMetadata = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postBody)\n            };\n            fetch(api_route, requestMetadata)\n            .then(res => res.json())\n            .then((user)=>{\n              resolve(user)\n            })\n          })\n        \n        \n      }\n    readImage= ()=>{\n        this.setState({\n          showUploadingText: \"block\",\n          uploadingText: \"Updating your avatar\"\n        })\n        var metadata = {\n          contentType: 'image/jpeg',\n        };\n        if(Cookies.get(\"user\")){\n          //name user avatar after email\n        var user = JSON.parse(Cookies.get(\"user\"))\n        const storageRef = firebase.storage().ref(\"avatars/\"+user._id).put(\n          this.base64ImageToBlob(this.state.preview), metadata)\n        storageRef.on(`state_changed`,snapshot=>{\n        }, error=>{\n        },\n        async () => {\n          storageRef.snapshot.ref.getDownloadURL().then(async (url)=>{\n            this.postImageToDB(user._id, url)\n            .then((user)=>{\n              this.props.setUser(user)\n              this.setState({uploadingText: \"Avatar updated\"})\n              setTimeout(()=>{\n                this.setState({showUploadingText: \"none\"})\n              }, 1200)\n            })\n          });\n        });\n        }\n        \n    }\n        render () {\n        return (\n          <div className=\"avatar-container\">\n            <Avatar\n              width={200}\n              height={200}\n              onCrop={this.onCrop}\n              onClose={this.onClose}\n              onBeforeFileLoad={this.onBeforeFileLoad}\n              src={this.state.src}\n            />\n            <div style={{display: this.state.showPreview}}>\n            \n                <p className=\"text-light avatar-preview-text\">Avatar Preview</p>\n                <img className=\"avatar-preview\" src={this.state.preview} alt=\"Preview\" />\n                <br></br>\n                <button className=\"btn btn-primary\" onClick={this.readImage}>Update Avatar</button>\n                  <div className=\"updating-avatar\" style={{\"display\": this.state.showUploadingText}}>\n                    <div className=\"loader\"></div>\n                    <p className=\"updating-avatar-text\">{this.state.uploadingText}</p>\n                  </div>\n            </div>\n          </div>\n        )\n      }\n    }\nexport default AvatarCropper;\n","import React, {Component} from \"react\";\nimport \"../css/Settings.css\";\nimport AvatarCropper from \"../components/AvatarCropper\";\nimport KeyWordsInput from \"../components/KeyWordsInput\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Link } from 'react-router-dom';\n\nclass Settings extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      bio:\"\",\n      showBioSuccess: \"none\",\n      keywords:[]\n    }\n    this.updateBio = this.updateBio.bind(this);\n    this.handleBioChange = this.handleBioChange.bind(this)\n  }\n  componentDidMount(){\n    console.log(this.props.user.Subscription_Level)\n    this.props.getKeywords();\n  }\n  handleBioChange(e){\n    this.setState({bio: e.target.value});\n  }\n  showBioSuccessMessage(){\n    this.setState({showBioSuccess: \"block\"});\n  }\n  createBioForm(){\n      return(\n        <div>\n          <textarea onChange={this.handleBioChange} className=\"update-bio-input\" placeholder=\"Write something about your academic experience\"></textarea>\n          <p className=\"text-light helper-text\">This will be displayed on your profile</p>\n          <button onClick={this.updateBio}className=\"btn btn-primary\">Update Bio</button>\n          <p className=\"text-light bio-msg\" style={{display: this.state.showBioSuccess}}>Bio successfully updated</p>\n        </div>\n      );\n    \n  }\n  updateBio(){\n    if(this.state.bio !== \"\") {\n      const api_route = 'https://degreeme.io/API/UpdateBio';\n      const postBody = {\n          userId: this.props.user._id,\n          bio: this.state.bio,\n      };\n      const requestMetadata = {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(postBody)\n      };\n      fetch(api_route, requestMetadata)\n      .then(res => res.json())\n      .then((user)=>{\n        this.props.setUser(user)\n        this.showBioSuccessMessage();\n      })\n    }\n   \n  }\n  renderUpgradeBtn(){\n    if(this.props.user.Subscription_Level === \"Free Tier\") {\n      return(\n        <Link to=\"/Upgrade\" className=\"btn btn-primary settings-upgrade-acct\">Upgrade your account</Link>\n      )\n    }\n  }\n  render(){\n    return (\n        <div className=\"settings-wrapper\">\n            <h2 className=\"text-light settings-label\">Settings</h2>\n            {this.renderUpgradeBtn()}\n            <h2 className=\"text-light update-avatar-title\">Add keywords to your profile</h2>\n           <div className=\"keywords-settings-wrapper\">\n              <KeyWordsInput addKeyword = {this.props.addKeyword} \n                removeKeyword = {this.props.removeKeyword} keywords = {this.props.keywords}\n                keyword = {this.props.keyword} />\n           </div>\n            \n            <h2 className=\"text-light update-avatar-title\">Update your avatar</h2>\n            <AvatarCropper user={this.props.user} setUser={this.props.setUser}/>\n            <div className=\"update-bio\">\n              <h2 className=\"text-light update-avatar-title\">Update Bio</h2>\n            {this.createBioForm()}\n            <p></p>\n            </div>\n            \n        </div>\n    );\n  }\n}\nexport default Settings;","import React, {Component} from \"react\";\nimport \"../css/Footer.css\";\n\n\n// import bootstrap from \"bootstrap\";\nclass Footer extends Component {\n  render(){\n    return (\n        <div className=\"footer\">\n          <p className=\"text-light footer-text\">DegreeMe {new Date().getFullYear()}</p>\n        </div>\n        // <p>Coming soon to iOs</p>\n    );\n\n\n  }\n}\n\nexport default Footer;","import React, {Component} from \"react\";\nimport \"../css/Header.css\";\nimport \"../css/Home.css\";\nimport Video from \"../components/Video\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../css/VideoRow.css';\nimport '../css/LikedVideos.css';\nimport Cookies from 'js-cookie';\nimport { Link } from 'react-router-dom';\n// import bootstrap from \"bootstrap\";\nclass LikedVideos extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videos: []\n        }\n    }\ncomponentDidMount(){\n\n    this.getLikedVideos();\n}\ngetLikedVideos(){\n    var user = JSON.parse(Cookies.get(\"user\"));\n    const api_route = 'https://degreeme.io/GetLikedVideos/'+user._id;\n    const requestMetadata = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n            };\n    fetch(api_route, requestMetadata)\n    .then(response => response.json())\n        .then(result => {\n            this.setState({videos: result})\n        })\n}\n  render(){\n    if(this.state.videos.length < 1) {\n        return(\n            <h2 className=\"text-light no-liked-videos\">Your liked videos will appear here</h2>\n        )\n    }\n    else {\n\n    \n    return (\n        <div>\n            <h1 className=\"text-light home-title\">Liked Videos</h1>\n            <div className=\"videos-container\">\n            <ul>\n            {this.state.videos.map((video, index) => (\n                <li key={index}>\n                <Link to={\"/Video/\"+video._id}>\n                    <Video Id={video._id} Title={video.Title} Thumbnail ={video.Thumbnail}\n                    Creator={video.Creator} Views={video.Views} image={video.Creator_Image}\n                    date={video.Date}/>\n                </Link>\n                </li>\n            ))}\n            </ul>\n            </div>\n        </div>\n    );\n}\n  }\n}\nexport default LikedVideos;","import React, {Component} from \"react\";\nimport \"../css/VideoRow.css\";\nimport \"../css/Video.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport FormatDate from \"../GlobalFunctions/FormatDate\";\nimport HtmlDecode from '../GlobalFunctions/HTMLDecode'\nvar formatDate = new FormatDate();\nvar decode = new HtmlDecode();\n\nclass Video extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPlayIcon: \"none\"\n        }\n        this.showPlayIcon = this.showPlayIcon.bind(this)\n        this.hidePlayIcon = this.hidePlayIcon.bind(this)\n    }\n    showPlayIcon(){\n        this.setState({showPlayIcon: \"block\"})\n    }\n    hidePlayIcon(){\n        this.setState({showPlayIcon: \"none\"})\n    }\n    render(){\n        return (\n            <div className=\"video-item\" onMouseOut={this.hidePlayIcon} onMouseOver={this.showPlayIcon}>\n                    <div className=\"playIcon-search-results\" style={{\"display\": this.state.showPlayIcon}}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" className=\"bi bi-play-fill\" viewBox=\"0 0 16 16\">\n                            <path d=\"m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z\"/>\n                        </svg>\n                    </div>\n                    <img className=\"thumbnail-search-result\" src={decode.htmlDecode(this.props.Thumbnail)} alt=\"Thumbnail\"/>\n\n                    <div className=\"video-details-search-result\">\n                        <div className=\"sub-details-search-result\">\n                            <p className=\"video-title-search-result text-light\">\n                                {this.props.Title}\n                            </p>\n                            <p className=\"view-count-search-result\">{this.props.Views} views \n                                <span className=\"video-date-search-result\">\n                                    {formatDate.displayTimeSince(this.props.date)}\n                                </span>\n                                </p>\n                                <p className=\"text-light video-description-search-result\">{this.props.description}</p>\n                            <p className=\"creator-name-search-result\">\n                                <img className=\"creator-img-search-result\" src={this.props.image} alt=\"Creator\"/>\n                                {this.props.Creator}\n                                </p>\n                        </div>\n                    </div>\n            </div>          \n        );\n  }\n}\n\nexport default Video;","export default __webpack_public_path__ + \"static/media/NoResults.3936f882.svg\";","import React, {Component} from \"react\";\nimport \"../css/Settings.css\";\n// import AvatarCropper from \"../components/AvatarCropper\";\nimport 'bootstrap/dist/css/bootstrap.css';\n// import Cookies from 'js-cookie';\nimport  \"../css/SearchResults.css\";\nimport Video from \"../components/SearchResultVideo\";\nimport { Link } from 'react-router-dom';\nimport NoResultsImage from \"../images/NoResults.svg\";\nimport HTMLDecode from \"../GlobalFunctions/HTMLDecode\";\nvar htmlDecode = new HTMLDecode();\nclass SearchResults extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n        videos: [],\n        searchLabel: \"\",\n        noResults: false\n    }\n    this.getVideosFromSearchValue = this.getVideosFromSearchValue.bind(this)\n    this.renderResults = this.renderResults.bind(this)\n    this.setSearchLabel = this.setSearchLabel.bind(this)\n    this.showNoResults = this.showNoResults.bind(this)\n\n\n}\nsetSearchLabel(){\n    if(this.props.searchValue !== \"\"){\n        this.setState({searchLabel: this.props.searchValue})\n    }\n    else {\n        this.setState({searchLabel: window.location.href.split(\"/\")[4]})\n\n    }\n}\n  componentDidMount(){\n      this.getVideosFromSearchValue();\n      this.setSearchLabel();\n      this.render();\n  }\n//   componentDidUpdate(){\n//     this.getVideosFromSearchValue();\n// }\n  getVideosFromSearchValue(){\n    var search = \"\";\n      if(this.props.searchValue !== \"\") {\n        search = this.props.searchValue;\n      }\n      else {\n        search = this.props.match.params.id;\n      }\n    const api_route = 'https://degreeme.io/API/GetVideosBySearchValue/'+search;\n    const requestMetadata = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n    };\n    fetch(api_route, requestMetadata)\n    .then(response => response.json())\n        .then(result => {\n\n            this.setState({videos: result})\n            if(result.length > 0){\n                this.setState({noResults: false})\n            }\n            else {\n                this.setState({noResults: true})\n\n            }\n        })\n  }\n  shortenVideoDescription(description){\n      if(description.length > 50) {\n          return description.substring(0,50) + \"...\";\n      }\n      else {\n          return description;\n      }\n  }\n  showNoResults(){\n    if(this.state.noResults) {\n       return (\n        <img className=\"no-results-img\" src={NoResultsImage} alt=\"No results\"/>\n       );\n   }\n   else {\n       return (\n            <div className=\"loader-search-results\"></div>      \n       );\n   }\n  }\n  renderResults(){\n      if(this.state.videos.length > 0) {\n        return (\n            this.state.videos.map((video, index) => (\n                <li key={index}>\n                   <div className=\"video-item-container\">\n                       <Link to={\"/Video/\"+video._id}>\n                           <Video Id={video._id} Title={video.Title} Thumbnail ={video.Thumbnail}\n                           Creator={video.Creator} Views={video.Views} image={video.Creator_Image}\n                           date={video.Date} description={this.shortenVideoDescription(video.Description)}/>\n                       </Link>\n                   </div>\n               </li>\n           ))\n        )\n      }\n      else{\n\n          return (\n              <div>\n                  {this.showNoResults()}\n              </div>\n          );\n      }\n  }\n  render(){\n    return (\n        <div className=\"search-results\">\n            <h2 className=\"text-light video-label\">\n                {this.state.videos.length} results matching <span className=\"search-value-label\">{htmlDecode.convertQueryString(this.state.searchLabel)}</span>\n            </h2>\n            <ul className=\"search-results-list\">\n               {this.renderResults()} \n            </ul>\n            \n        </div>\n    );\n  }\n}\nexport default SearchResults;","export default __webpack_public_path__ + \"static/media/visa.1fae40ca.svg\";","import React, {Component} from \"react\";\nimport { Popover } from 'react-tiny-popover';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"../css/PaymentSettings.css\"\n\nimport Visa_SVG from \"../images/visa.svg\"\nclass PaymentCard extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            isCardPopoverOpen: false\n        }\n       this.renderCard = this.renderCard.bind(this)\n    //    this.toggleCardPopover = this.toggleCardPopover.bind(this)\n    }\n    showCardLogo(brand){\n        if(brand === \"visa\"){\n            return(\n                <img className=\"brand-img\" src={Visa_SVG} alt=\"Visa Card\"/>\n            )\n        }\n        else{\n            return (\n                <div>\n                <p className=\"brand\">{brand}</p>\n                </div>\n            )\n        }\n    }\n    toggleCardPopover(){\n        this.setState({isCardPopoverOpen: !this.state.isCardPopoverOpen});\n        \n    }\n    renderCard() {\n        if(this.props.customer.invoice_settings.default_payment_method === this.props.paymentMethod.id){\n            console.log(this.props)\n            return(\n                <li className=\"text-light\" key={this.props.currIndex}>\n                <div className=\"card-group\">\n               {this.showCardLogo(this.props.paymentMethod.card.brand)}\n                    <span>****</span>\n                    <span>****</span>\n                    <span>****</span>\n                    <span>{this.props.paymentMethod.card.last4}</span>\n                    \n                    <br></br>\n                    \n                    <div>\n                    <p className=\"expiration\">Expires: {this.props.paymentMethod.card.exp_month}/{this.props.paymentMethod.card.exp_year}\n                    <span className=\"three-dots\" onClick={()=> this.toggleCardPopover()}>\n                    <Popover\n                    isOpen={this.state.isCardPopoverOpen}\n                    \n                    positions={[ 'right', 'top']} // preferred positions by priority\n                    content={<div className=\"text-light card-popover\">\n                        <ul>\n                            <li ><span className=\"badge badge-success\" onClick={()=>this.props.updateDefaultPaymentMethod(this.props.paymentMethod.id)}>Use Card</span ></li>\n                            <li ><span className=\"badge badge-danger\" onClick={()=>this.props.removePaymentMethod(this.props.paymentMethod.id)}>Remove Card</span></li>\n                            </ul></div>}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-three-dots\" viewBox=\"0 0 16 16\">\n                    <path d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\"/>\n                    </svg>\n                </Popover>\n                    </span>\n                    <span className=\"badge badge-success\">In use</span>\n                   \n                    </p>\n                    \n                    </div>\n                </div>\n                \n    \n            </li>\n            )\n        }\n        else{\n            return(\n                <li className=\"text-light\">\n                <div className=\"card-group\">\n               {this.showCardLogo(this.props.paymentMethod.card.brand)}\n                    <span>****</span>\n                    <span>****</span>\n                    <span>****</span>\n                    <span>{this.props.paymentMethod.card.last4}</span>\n                    <br></br>\n                    \n                    <div>\n                    <p className=\"expiration\">Expires: {this.props.paymentMethod.card.exp_month}/{this.props.paymentMethod.card.exp_year}\n                    <span className=\"three-dots\" onClick={()=> this.toggleCardPopover()}>\n                    <Popover\n                    isOpen={this.state.isCardPopoverOpen}\n                    \n                    positions={[ 'right']} // preferred positions by priority\n                    content={<div className=\"text-light card-popover\"><ul><li ><span className=\"badge badge-success\" onClick={()=>this.props.updateDefaultPaymentMethod(this.props.paymentMethod.id)}>Use Card</span ></li>\n                    <li ><span className=\"badge badge-danger\" onClick={()=>this.props.removePaymentMethod(this.props.paymentMethod.id)}>Remove Card</span></li>\n                    </ul></div>}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-three-dots\" viewBox=\"0 0 16 16\">\n                     <path d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\"/>\n                    </svg>\n                </Popover>\n                    </span>\n                   \n                    </p>\n                    \n                    </div>\n                </div>\n                \n    \n            </li>\n            )\n        }\n    }\n    render() {\n        return(\n            <div>\n                {this.renderCard()}\n            </div>\n        )\n    }\n}\nexport default PaymentCard;","import React, {Component} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"../css/AddCard.css\"\nimport { CardElement, Elements, ElementsConsumer } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\nclass AddPaymentMethod extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            cardComplete: false,\n            loading: false,\n            loadStarted: false,\n            progressText:\"Adding card...\",\n            disableCardButton: false   \n        }\n        this.submitPaymentMethod = this.submitPaymentMethod.bind(this);\n        this.showLoader = this.showLoader.bind(this)\n        this.showProcessText = this.showProcessText.bind(this)\n        this.createCard = this.createCard.bind(this)\n\n\n    }\n    submitPaymentMethod(user){\n        return new Promise((resolve, reject)=>{\n        const api_route = 'https://degreeme.io/API/AddPaymentMethod';\n        const postBody = {\n          UserId: user._id,\n          PaymentMethodId: this.state.paymentMethod.id\n        };\n        const requestMetadata = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(postBody)\n        };\n        fetch(api_route, requestMetadata)\n          .then(res => res.json())\n          .then((res) => {\n           if(res !== \"error\") {\n               this.props.getStripePaymentMethods();\n               this.props.getStripeCustomer();\n               this.props.setContainsNoPaymentMethod();\n            this.setState({loading: false, progressText: \"Successfully added card\" })\n            \n            resolve(true)\n            }\n            else {\n                resolve(false)\n            }\n          }) \n        })\n    }\n    handleSubmit = async (elements, stripe) => {\n\n        this.setState({loading: true, loadStarted: true,\n            progressText: \"Adding payment method...\",\n        disableCardButton: true })\n\n        if (!stripe || !elements) {\n          // Stripe.js has not loaded yet. Make sure to disable\n          // form submission until Stripe.js has loaded.\n          return;\n        }\n    \n        // Get a reference to a mounted CardElement. Elements knows how\n        // to find your CardElement because there can only ever be one of\n        // each type of element.\n        const cardElement = elements.getElement(CardElement);\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n          type: 'card',\n          card: cardElement,\n        });\n    \n        if (error) {\n          console.log('[error]', error);\n        } else {\n          this.setState({paymentMethod: paymentMethod,\n            disableCardButton: false});\n            this.submitPaymentMethod(this.props.user)\n            .then(()=>{\n                cardElement.clear();\n            })\n        }\n      };\n      checkIfStripeCardComplete(event) {\n        if (event.complete) {\n          alert(\"done\")\n        }\n      }\n    validateStripeCard = (elements) => {\n        const cardElement = elements.getElement(CardElement);\n        cardElement.on('change', (event) => {\n          if (event.complete) {\n            this.setState({ cardComplete: true })\n          } else {\n            this.setState({ cardComplete: false })\n          }\n    \n        });\n      }\n    loadStripe(){\n        return loadStripe('pk_test_89vfyOdmTWo09jkpoyAnRy1l00ll36NLGn');\n      }\n    //controls card input display\n  createCard(elements, stripe) {\n      return (\n        <div >\n          <div className=\"card-input-container-1\">\n            <CardElement\n              onChange={() => this.validateStripeCard(elements)}\n              options={{\n                style: {\n                  base: {\n                    fontSize: '16px',\n                    color: 'white',\n                    '::placeholder': {\n                      color: '#aab7c4',\n                    },\n                  },\n                  invalid: {\n                    color: '#9e2146',\n                  },\n                },\n              }} \n            />\n            \n          </div>\n          <button className=\"btn btn-primary add-card-btn\" \n            disabled={!stripe || !this.state.cardComplete || this.state.disableCardButton}\n            onClick={()=> this.handleSubmit(elements, stripe)}>Add Card</button>\n        </div>\n      );\n  }\n  \n   \n      showLoader(){\n          if(this.state.loading){\n              return (\n                  <div className=\"load-container\">\n                       {/* <div className=\"loader\"></div>  */}\n                       <p className=\"text-light processText\">{this.state.progressText}</p>\n                  </div>\n              )\n          }\n          else{\n              return (\n                  <div className=\"placeholder\"></div>\n              )\n          }\n      }\n      showProcessText(){\n        // if(this.state.loadStarted){\n            // return (\n            //     <div>\n            //         <p className=\"text-light processText\">{this.state.progressText}</p>                          \n            //     </div>\n            // )\n        // }\n    }\n    renderCard(){\n        if(this.props.showCardInput) {\n            return (\n                <div className=\"add-payment\">\n               \n                <div className=\"add-card-input\">\n                    <Elements stripe={this.loadStripe()}>\n                    <ElementsConsumer>\n                    {({ elements, stripe }) => (\n                        this.createCard(elements, stripe)\n                    )}\n                    </ElementsConsumer>\n                </Elements>\n                </div>\n                {this.showLoader()}\n                {/* {this.showProcessText()} */}\n           </div>\n                );\n        }\n        else {\n            return (\n                <div></div>\n            )\n        }\n           \n        \n        \n    }\n  render(){\n\n    return (\n       this.renderCard()\n    );\n  }\n}\nexport default AddPaymentMethod;","import React, {Component} from \"react\";\nimport { Popover } from 'react-tiny-popover';\n\nclass Subscription_Item extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isPopoverOpen: false\n        }\n        this.cancelSubscription = this.cancelSubscription.bind(this)\n    }\n    togglePopover(){\n        this.setState({isPopoverOpen: !this.state.isPopoverOpen}); \n    }\n    cancelSubscription(subscription_id){\n        this.props.showRemoveSubLoader();\n        const api_route = 'https://degreeme.io/API/CancelSubscription';\n            const postBody = {\n                UserId: this.props.user._id,\n                subscription: subscription_id\n            };\n            const requestMetadata = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postBody),\n            };\n            fetch(api_route, requestMetadata)\n            .then(res => res.json())\n            .then((result)=>{\n                console.log(\"RES: \" ,result)\n                this.props.setUser(result);\n                this.props.getStripeSubscriptions();\n                this.props.hideRemoveSubLoader();\n            })\n    }\n    render() {\n        return (\n            <div>\n                <p className=\"pro-tier-access\">Pro Access</p>\n                <p className=\"brand\">${this.props.sub.plan.amount / 100} per {this.props.sub.plan.interval}\n                <span className=\"three-dots\" onClick={()=> this.togglePopover()}>\n                <Popover\n                    isOpen={this.state.isPopoverOpen}\n                    \n                    positions={[ 'right', 'top']} // preferred positions by priority\n                    content={<div className=\"text-light card-popover\">\n                        <ul>\n                            <li ><span className=\"badge badge-danger\" onClick={()=>this.cancelSubscription(this.props.sub.id)} >End Subscription</span></li>\n                            </ul></div>}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-three-dots\" viewBox=\"0 0 16 16\">\n                    <path d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\"/>\n                    </svg>\n                </Popover>\n                </span>\n                </p>\n            </div>\n        )\n    }\n}\nexport default Subscription_Item;","import React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"../css/PaymentSettings.css\"\nimport {Redirect, Link } from 'react-router-dom';\n\nimport Visa_SVG from \"../images/visa.svg\"\nimport FormatDate from \"../GlobalFunctions/FormatDate\";\nimport PaymentCard from \"../components/PaymentCard\";\nimport AddPaymentMethod from \"./AddPaymentMethod\";\nimport SubscriptionItem from \"../components/Subscription_Item\"\nimport Cookies from 'js-cookie';\n\nconst formatDate = new FormatDate()\nclass PaymentSettings extends Component {\n    mounted = false\n    constructor(props) {\n        super(props)\n        this.state = {\n            paymentMethods: [],\n            subscriptions: [],\n            payments: [],\n            customer: {},\n            upcomingPayments: [],\n            isCardPopoverOpen: false,\n            showCardInput: true,\n            subscriptionLoading: false,\n            cardLoading: false,\n            subscriptionLoadingText: \"Adding\",\n            containsNoPaymentMethod: false,\n            hasDefault: false,\n            disableSubButton: false\n\n        }\n        this.getStripePaymentMethods = this.getStripePaymentMethods.bind(this)\n        this.getStripeSubscriptions = this.getStripeSubscriptions.bind(this)\n        this.getPastTransactions = this.getPastTransactions.bind(this)\n        this.renderPayments = this.renderPayments.bind(this)\n        this.renderUpcomingPayments = this.renderUpcomingPayments.bind(this)\n        this.renderPaymentSettings = this.renderPaymentSettings.bind(this)\n        this.getUpcomingPayments = this.getUpcomingPayments.bind(this)\n        this.getStripeCustomer = this.getStripeCustomer.bind(this)\n        this.toggleCardPopover = this.toggleCardPopover.bind(this);\n        this.updateDefaultPaymentMethod = this.updateDefaultPaymentMethod.bind(this);\n        this.removePaymentMethod = this.removePaymentMethod.bind(this);\n        this.showSubscriptionLoader = this.showSubscriptionLoader.bind(this)\n        this.setCardLoading = this.setCardLoading.bind(this)\n        this.showRemoveSubLoader = this.showRemoveSubLoader.bind(this);\n        this.hideRemoveSubLoader = this.hideRemoveSubLoader.bind(this);\n        this.setContainsNoPaymentMethod = this.setContainsNoPaymentMethod.bind(this)\n        this.showCards = this.showCards.bind(this)\n        this.checkIfDefaultExists = this.checkIfDefaultExists.bind(this)\n    }\n\n    componentDidMount() {\n        this.mounted = true\n        if (this.mounted) {\n            this.getStripeCustomer();\n            this.getStripePaymentMethods();\n            this.getStripeSubscriptions();\n            this.getPastTransactions();\n            this.getUpcomingPayments();\n        }\n    }\n    componentWillUnmount() {\n        this.mounted = false\n    }\n    getStripeSubscriptions() {\n        let id = this.props.match.params.id\n        const api_route = 'https://degreeme.io/API/GetSubscriptions/' + id;\n        const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        };\n        fetch(api_route, requestMetadata)\n            .then(response => response.json())\n            .then(result => {\n                if(result === \"err\") {\n                    this.setState({ subscriptions: [] })\n  \n                }\n                else {\n                    this.setState({ subscriptions: result.data })\n\n                }\n            })\n    }\n    getStripePaymentMethods() {\n        //fixed\n        let id = this.props.match.params.id\n        const api_route = 'https://degreeme.io/API/GetPaymentMethods/' + id;\n        const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        };\n        fetch(api_route, requestMetadata)\n            .then(response => response.json())\n            .then(result => {\n                if(result === \"err\"){\n                    this.setState({ \n                        containsNoPaymentMethod: true, \n                        paymentMethods: []\n                    })\n                }\n                else {\n                    this.setState({ paymentMethods: result.data })\n                    if (result.data.length === 0) {\n                        alert(\"contains none\")\n                        this.setState({ containsNoPaymentMethod: true })\n                    }\n                }\n                \n            })\n    }\n    getStripeCustomer() {\n        let id = this.props.match.params.id\n        const api_route = 'https://degreeme.io/API/GetStripeCustomer/' + id;\n        const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        };\n        fetch(api_route, requestMetadata)\n            .then(response => response.json())\n            .then(result => {\n                if(result === \"err\"){\n                    this.setState({ customer: {} })\n                }\n                else {\n                    this.setState({ customer: result })\n                }\n            })\n    }\n    getUpcomingPayments() {\n        let id = this.props.match.params.id\n        const api_route = 'https://degreeme.io/API/GetUpcomingPayments/' + id;\n        const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        };\n        fetch(api_route, requestMetadata)\n            .then(response => response.json())\n            .then(result => {\n                if (result !== \"err\") {\n                    this.setState({ upcomingPayments: result })\n                }\n                else {\n                    this.setState({ upcomingPayments: [] }) \n                }\n            })\n    }\n    getPastTransactions() {\n        let id = this.props.match.params.id\n        const api_route = 'https://degreeme.io/API/GetPastTransactions/' + id;\n        const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        };\n        fetch(api_route, requestMetadata)\n            .then(response => response.json())\n            .then(result => {\n                this.setState({ payments: result.data })\n            })\n    }\n    addSubscription() {\n        this.setState({\n            subscriptionLoading: true, subscriptionLoadingText: \"Adding\",\n            disableSubButton: true\n        });\n        const api_route = 'https://degreeme.io/API/AddSubscription';\n        const postBody = {\n            UserId: this.props.match.params.id\n        };\n        const requestMetadata = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postBody),\n        };\n        fetch(api_route, requestMetadata)\n            .then(res => res.json())\n            .then((result) => {\n                this.props.setUser(result)\n                this.getStripeSubscriptions();\n                this.setState({ \n                    subscriptionLoading: false,\n                    disableSubButton: false\n                \n                })\n            })\n    }\n    showRemoveSubLoader() {\n        this.setState({ subscriptionLoading: true, subscriptionLoadingText: \"Removing\" })\n    }\n    hideRemoveSubLoader() {\n        this.setState({ subscriptionLoading: false })\n    }\n    showSubscriptions() {\n        if (this.state.subscriptions.length > 0) {\n            return (\n                <div className=\"subs\">\n                    <h4 className=\"text-light\">Subscriptions</h4>\n\n                    <ul>\n                        {this.state.subscriptions.map((sub, index) => (\n                            <li key={index} className=\"text-light sub-li\">\n                                <SubscriptionItem sub={sub} getStripeSubscriptions={this.getStripeSubscriptions}\n                                    showRemoveSubLoader={this.showRemoveSubLoader} user={this.props.user} setUser={this.props.setUser}\n                                    hideRemoveSubLoader={this.hideRemoveSubLoader} />\n                            </li>\n                        ))}\n                    </ul>\n                    {this.showSubscriptionLoader()}\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"add-pro-sub-btn-container\">\n                    <button className=\"btn btn-primary add-pro-sub\"\n                        onClick={() => this.addSubscription()} disabled={this.state.containsNoPaymentMethod || !this.checkIfDefaultExists() || this.state.disableSubButton}>Add Pro Subscription</button>\n                    {this.showSubscriptionLoader()}\n                </div>\n            )\n        }\n    }\n    setContainsNoPaymentMethod() {\n        this.setState({ containsNoPaymentMethod: false })\n    }\n\n    showCustomerInfo() {\n        return (\n            <div>\n                <p className=\"text-light\">{this.state.customer.name}</p>\n                <p className=\"text-light\">{this.state.customer.email}</p>\n\n            </div>\n        )\n    }\n    showCardLogo(brand) {\n        if (brand === \"visa\") {\n            return (\n                <img className=\"brand-img\" src={Visa_SVG} alt=\"Visa Card\" />\n            )\n        }\n        else {\n            return (\n                <div>\n                    <p className=\"brand\">{brand}</p>\n                </div>\n            )\n        }\n    }\n    toggleCardPopover() {\n        this.setState({ isCardPopoverOpen: !this.state.isCardPopoverOpen });\n\n    }\n    updateDefaultPaymentMethod(paymentMethodId) {\n        const api_route = 'https://degreeme.io/API/UpdateDefaultPaymentMethod';\n        const postBody = {\n            UserId: this.props.match.params.id,\n            PaymentMethodId: paymentMethodId\n        };\n        const requestMetadata = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postBody),\n        };\n        fetch(api_route, requestMetadata)\n            .then(res => res.json())\n            .then((result) => {\n                this.getStripeCustomer();\n                this.showCards();\n            })\n    }\n    removePaymentMethod(paymentMethodId) {\n        this.setCardLoading(true);\n        const api_route = 'https://degreeme.io/API/RemovePaymentMethod';\n        const postBody = {\n            PaymentMethodId: paymentMethodId\n        };\n        const requestMetadata = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postBody),\n        };\n        fetch(api_route, requestMetadata)\n            .then(res => res.json())\n            .then((result) => {\n                this.setCardLoading(false);\n                this.getStripePaymentMethods();\n            })\n    }\n    showUpgradeButton() {\n        if (this.props.user.Subscription_Level === \"Free Tier\") {\n            return (\n                <Link to=\"/Upgrade\">\n                    <button className=\"btn btn-primary subcribe-btn\">Upgrade</button>\n                </Link>\n            )\n        }\n        else if (this.props.user.Subscription_Level === \"Pro Tier\") {\n            return (\n                <p className=\"text-light tier-text\">Pro Tier</p>\n            )\n        }\n    }\n    formatCards(customer) {\n        if (customer.invoice_settings) {\n            return this.state.paymentMethods.map((paymentMethod, index) => (\n                <PaymentCard customer={customer} paymentMethod={paymentMethod}\n                    updateDefaultPaymentMethod={this.updateDefaultPaymentMethod}\n                    removePaymentMethod={this.removePaymentMethod}\n                    setCardLoading={this.setCardLoading} key={index} />\n            ))\n        }\n    }\n    setCardLoading(status) {\n        this.setState({ cardLoading: status })\n    }\n    showCardError(hasDefault) {\n        //  this.setState({hasDefault:hasDefault });\n        if (this.state.containsNoPaymentMethod) {\n            return (\n                <p className=\"text-danger\">\n                    You must add a card before you can\n                    subscribe\n                    {/* You are not using any of your cards. Select\n                a card to avoid service disruption. */}\n                </p>\n            )\n        }\n        else if (!hasDefault) {\n            return (\n                <p className=\"text-danger\">\n                    You are not using any of your cards. Select\n                    use card to avoid service disruption\n                    {/* You are not using any of your cards. Select\n                a card to avoid service disruption. */}\n                </p>\n            )\n        }\n    }\n    checkIfDefaultExists() {\n        //check if default payment method exists\n        for (var i in this.state.paymentMethods) {\n            if (this.state.customer.invoice_settings) {\n                if (this.state.paymentMethods[i].id === this.state.customer.invoice_settings.default_payment_method) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    showCards() {\n        var defaultExists = this.checkIfDefaultExists();\n        return (\n            <div className=\"cards-container\">\n                <h4 className=\"text-light\">Cards on file</h4>\n                {this.showCardError(defaultExists)}\n\n                <ul>\n                    {this.formatCards(this.state.customer)}\n                    <li>\n                        <AddPaymentMethod showCardInput={this.state.showCardInput}\n                            user={this.props.user} getStripePaymentMethods={this.getStripePaymentMethods}\n                            setContainsNoPaymentMethod={this.setContainsNoPaymentMethod\n                            } getStripeCustomer={this.getStripeCustomer}\n                        />\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n    renderPayments() {\n        return (\n            <div className=\"payment-container\">\n                <h4 className=\"text-light \">Payments</h4>\n                <div className=\"table-container\">\n                    <table>\n                        <thead>\n                            <tr className=\"text-light header-row\">\n                                <td>Amount</td>\n                                <td>Description</td>\n                                <td>Date</td>\n                                <td></td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.payments.map((payment, index) => (\n\n                                <tr className=\"text-light\" key={index}>\n                                    <td>${payment.amount / 100}.00\n                                        <span className=\"badge badge-success status-badge\">{payment.status}</span>\n                                    </td>\n                                    <td>{payment.description}</td>\n                                    <td>{formatDate.displayDate(new Date(payment.created * 1000))}</td>\n                                    <td></td>\n                                </tr>\n\n                            ))}\n\n                        </tbody>\n                        <tfoot>\n                        </tfoot>\n                    </table>\n                </div>\n            </div>\n\n        )\n    }\n    renderUpcomingPayments() {\n        if (this.state.upcomingPayments.length > 0) {\n            return (\n                <div className=\"upcoming-payment-container\">\n                    <h4 className=\"text-light \">Upcoming Payments</h4>\n                    <div className=\"table-container\">\n\n                        <table>\n                            <thead>\n                                <tr className=\"text-light header-row\">\n                                    <td>Amount</td>\n                                    <td>Description</td>\n                                    <td>Date</td>\n                                    <td></td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.upcomingPayments.map((payment, index) => (\n\n                                    <tr className=\"text-light\" key={index}>\n                                        <td>${payment.amount / 100}.00\n                                        </td>\n                                        <td>{payment.description}</td>\n                                        <td>{formatDate.displayDate(new Date(payment.period.start * 1000))}</td>\n                                        <td></td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div></div>\n            )\n        }\n\n    }\n    showSubscriptionLoader() {\n        if (this.state.subscriptionLoading) {\n            return (\n                <div className=\"\">\n                    <div className=\"sub-loader\"></div>\n                    <p className=\"subscription-loader-text\">\n                        {this.state.subscriptionLoadingText} Subscription\n                </p>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"\"></div>\n            )\n        }\n    }\n    renderPaymentSettings(){\n        var user = this.props.user;\n        if(this.props.user._id === undefined) {\n            user = JSON.parse(Cookies.get(\"user\"))\n            \n        }\n        //if user is logged in\n         if(user._id !== undefined){\n             //check if user id matches params id\n             if(this.props.match.params.id === user._id) {\n                return (\n                    <div className=\"payment-settings\">\n                        <ul className=\"main-list\">\n                            <li className=\"payments-li\">\n                                {this.renderPayments()}\n                                {this.renderUpcomingPayments()}\n                            </li>\n                            <li className=\"payment-details-li\">\n                                <div className=\"payment-details\">\n                                    {this.showCards()}\n                                    {this.showSubscriptions()}\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                );\n             }\n             else {\n                 //redirect\n                 return (\n                    <Redirect to=\"/Home\" />\n                );\n             }\n\n         }\n         else {\n             //redirect\n             return (\n                <Redirect to=\"/Home\" />\n            );\n         }\n    }\n    render() {\n        return this.renderPaymentSettings();\n    }\n}\nexport default PaymentSettings;","export default __webpack_public_path__ + \"static/media/person1.41d70246.svg\";","export default __webpack_public_path__ + \"static/media/person2.22387971.svg\";","export default __webpack_public_path__ + \"static/media/person3.6a72384c.svg\";","export default __webpack_public_path__ + \"static/media/person4.d2d5982e.svg\";","export default __webpack_public_path__ + \"static/media/person5.4bccd7be.svg\";","export default __webpack_public_path__ + \"static/media/students-studying.0fced9a1.svg\";","import React, { Component } from \"react\";\nimport '../css/LandingPage.css';\nimport person1 from \"../images/person1.svg\"\nimport person2 from \"../images/person2.svg\"\nimport person3 from \"../images/person3.svg\"\nimport person4 from \"../images/person4.svg\"\nimport person5 from \"../images/person5.svg\"\nimport studentsStudying from \"../images/students-studying.svg\"\nimport { Link } from 'react-router-dom';\n\nclass LandingPage extends Component {\n\n    render() {\n        return (\n            <div className=\"landing-page\">\n                 <div className=\"landing\"> \n                <div className=\"landing--text--title landing--margin title--landing text-light\">\n                    How-to videos created for UNCC Comp Sci. Students <br />\n                </div>\n                <Link to=\"/CreateAccount\">\n                   <button className=\"btn btn-primary landing-sign-up\">Sign Up</button>\n                </Link>\n                <div className=\"landing--people\" id=\"landing--animation--1\">\n                    <img\n                      id=\"landing--person1--animation\"\n                      src={person1}\n                      alt=\"Person 1\"\n                    ></img>\n                    <img\n                      id=\"landing--person2--animation\"\n                      src={person2}\n                      alt=\"Person 2\"\n                    ></img>\n                    <img\n                      id=\"landing--person3--animation\"\n                      src={person3}        \n                      alt=\"Person 3\"            \n                      ></img>\n                    <img\n                      id=\"landing--person4--animation\"\n                      src={person4}      \n                      alt=\"Person 4\"   \n                      ></img>\n                    <img\n                      id=\"landing--person5--animation\"\n                      src={person5}\n                      alt=\"Person 5\"\n                    ></img>\n                </div>\n                <svg className=\"landing--wave\" width=\"100%\" height=\"100%\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><defs></defs><path id=\"wave1\" d=\"\"/></svg>\n            </div>\n            <div className=\"feature1\">\n                <div>\n                    <div className=\"font--curly\">Monetize your knowledge</div>\n                    <div className=\"landing--text--big\">\n                      Earn \n                      <span className=\"landing--text--yellow\" id=\"landing--section1\">\n                      passive income \n                      </span>\n                      with the knowledge you've gained through school.\n                    </div>\n                  \n                    <div className=\"landing--text--small\">\n                      DegreeMe shares 20% of subscription revenue with creators. \n                      Each creator is paid based on the percentage of views \n                      they generate.\n                    </div>\n                    <Link to=\"/CreateAccount\" className=\"landing--text--yellow text--link\">\n                      Start earning today \n                    </Link>                </div>\n            </div>\n            <div className=\"feature4\">\n          <div className=\"landing--text--big\">Our Vision</div>\n          <div className=\"landing--text--small\">\n            We aim to simplify college\n            by connecting you with knowledgeable creators\n            that have taken the courses you need help with.\n          </div>\n   \n           <img className=\"students-studying\" src={studentsStudying} alt=\"Student Studying\"/>\n          \n    \n          \n        </div>\n            </div>\n            \n        );\n    }\n}\n\nexport default LandingPage;","import React, {Component} from \"react\";\nimport '../css/VideoUploader.css';\nimport '../css/Login.css';\nimport '../css/ResetPassword.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nclass ForgotPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            email:\"\"\n        };\n        this.handleEmailChange = this.handleEmailChange.bind(this)\n        this.generateResetPWLink = this.generateResetPWLink.bind(this)\n        \n    }\n   handleEmailChange(e){\n       this.setState({email: e.target.value})\n   }\n   generateResetPWLink(){\n    const api_route = 'https://degreeme.io/API/GenerateResetPasswordLink';\n   const postBody = {\n     Email: this.state.email,\n   };\n   const requestMetadata = {\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json'\n     },\n     body: JSON.stringify(postBody)\n   };\n   fetch(api_route, requestMetadata)\n     .then(res => res.json())\n     .then((res) => {\n      \n       console.log(res)\n       \n       \n     })\n   }\n   \n    \n   validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n    render(){\n            return (\n                <div className=\"reset-password\">\n                   <h3 className=\"text-light\">Reset Your Password</h3>\n                   <div className=\"login-input-container\">\n                        <p className=\"forgot-pw-label text-light\">Enter your Email</p>\n                        <input placeholder=\"example@gmail.com\" type=\"email\" name =\"Email\" className=\"forgot-pw-email\" onChange={this.handleEmailChange}/>\n                    </div>\n                    <button className=\"btn btn-primary\" disabled={!this.validateEmail(this.state.email)}\n                    onClick={this.generateResetPWLink}>Send password reset email</button>\n                </div>\n            );\n  }\n}\n\nexport default ForgotPassword;","import React, { Component } from \"react\";\nimport '../css/VideoUploader.css';\nimport '../css/Login.css';\nimport '../css/ResetPassword.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nclass UpdatePassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: \"\",\n            confirmPassword: \"\",\n            reqIdExists: \"\",\n            userId: \"\",\n            passwordMessageColor: \"\",\n            passwordMessage: \"\"\n        };\n        this.handlePwChange = this.handlePwChange.bind(this)\n        this.confirmPwChange = this.confirmPwChange.bind(this)\n        this.updatePassword = this.updatePassword.bind(this)\n\n    }\n    handlePwChange(e) {\n        this.setState({ password: e.target.value })\n    }\n\n    confirmPwChange(e) {\n        this.setState({ confirmPassword: e.target.value })\n    }\n    componentDidMount() {\n        this.getUpdateRequestById();\n    }\n    getUpdateRequestById() {\n        var req_id = window.location.href.split(\"/\")[4];\n        const api_route = 'https://degreeme.io/API/GetPasswordUpdateRequest/';\n        const postBody = {\n            request_id: req_id,\n        };\n        const requestMetadata = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postBody)\n        };\n        fetch(api_route, requestMetadata)\n            .then(res => res.json())\n            .then((res) => {\n                this.setState({\n                    reqIdExists: res[0],\n                    userId: res[1]\n                });\n            })\n    }\n    updatePassword() {\n        if (this.state.password.length < 7) {\n            this.setState({\n                passwordMessageColor: \"text-danger\",\n                passwordMessage: \"Password length must be at least 8 characters\"\n            })\n        }\n        else {\n            const api_route = 'https://degreeme.io/API/UpdatePassword/';\n            const postBody = {\n                userId: this.state.userId,\n                password: this.state.password,\n                req_id: this.props.match.params.id\n            };\n            const requestMetadata = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(postBody)\n            };\n            fetch(api_route, requestMetadata)\n                .then(res => res.json())\n                .then((res) => {\n                    if (res[0]) {\n                        this.setState({\n                            passwordMessageColor: \"text-success\",\n                            passwordMessage: res[1]\n                        })\n                    }\n                    else {\n                        this.setState({\n                            passwordMessageColor: \"text-danger\",\n                            passwordMessage: res[1]\n                        })\n                    }\n                })\n        }\n    }\n    renderUpdatePassword() {\n        if (this.state.reqIdExists === null) {\n            return (<div></div>);\n        }\n        else if (this.state.reqIdExists) {\n            return (\n                <div className=\"reset-password\">\n                    <h3 className=\"text-light\">Reset Your Password</h3>\n                    <div className=\"login-input-container\">\n                        <p className=\"forgot-pw-label text-light\">Enter new Password</p>\n                        <input type=\"password\" className=\"forgot-pw-email\" onChange={this.handlePwChange} />\n                    </div>\n                    <div className=\"login-input-container\">\n                        <p className=\"forgot-pw-label text-light\">Confirm Password</p>\n                        <input type=\"password\" className=\"forgot-pw-email\" onChange={this.confirmPwChange} />\n                    </div>\n                    <button className=\"btn btn-primary\" disabled={this.state.password === \"\"\n                        || this.state.confirmPassword === \"\"} onClick={this.updatePassword}\n                    >Update Password</button>\n                    <p className={this.state.passwordMessageColor + \" password-message\"}>{this.state.passwordMessage}</p>\n                </div>\n            );\n        }\n        else {\n            //display error message\n            return (\n                <div className=\"reset-password\">\n                    <h3 className=\"text-light\">Password update request ID is invalid.</h3>\n                </div>\n            );\n        }\n\n    }\n    render() {\n        return this.renderUpdatePassword();\n    }\n}\n\nexport default UpdatePassword;","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect} from 'react-router-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Header from '../components/Header';\nimport VideoUploader from '../components/VideoUploader';\nimport Home from '../components/Home';\nimport Login from '../components/Login';\nimport SingleVideo from '../components/SingleVideo';\nimport CreateAccount from '../components/CreateAccount';\nimport User from '../components/User';\nimport Settings from '../components/Settings';\nimport Footer from \"../components/Footer\"\nimport LikedVideos from '../components/LikedVideos';\nimport SearchResults from '../components/SearchResults'\nimport Cookies from 'js-cookie';\nimport CreateSellerAccount from \"./CreateSellerAccount\";\nimport UpgradeAccount from \"./UpgradeAccount\";\nimport PaymentSettings from \"./PaymentSettings\";\nimport LandingPage from \"./LandingPage\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport UpdatePassword from \"./UpdatePassword\";\n\n\nclass Routes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {},\n            notifications: [],\n            showNotificationBadge: \"none\",\n            notificationCount: 0,\n            searchValue: \"\",\n            keywords: []\n        }\n        this.setUser = this.setUser.bind(this);\n        this.logout = this.logout.bind(this);\n        this.updateAvatar = this.updateAvatar.bind(this);\n        this.getNotifications = this.getNotifications.bind(this);\n        this.getNotificationCount = this.getNotificationCount.bind(this);\n        this.hideUnreadCount = this.hideUnreadCount.bind(this);\n        this.showUnreadCount = this.showUnreadCount.bind(this);\n        this.setSearchValue = this.setSearchValue.bind(this);\n        this.handleAutocompleteChange = this.handleAutocompleteChange.bind(this);\n        this.getKeywords = this.getKeywords.bind(this);\n        this.addKeyword = this.addKeyword.bind(this);\n        this.removeKeyword = this.removeKeyword.bind(this);\n        this.keyword = React.createRef();\n    }\n    setUser(user){\n        Cookies.set(\"user\", user, {secure: true, sameSite: \"strict\"})\n        this.setState({user: user});\n    }\n    updateAvatar(avatar){\n        var user = this.state.user;\n        user.Image = avatar;\n        this.setState({user: user})\n    }\n    getKeywords(){\n        var user = {};\n        if(this.state.user._id === undefined) {\n          user = JSON.parse(Cookies.get(\"user\"));\n        }\n        else {\n          user = this.state.user\n        }\n        const api_route = 'https://degreeme.io/API/keywords/'+ user._id;\n        const requestMetadata = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                    };\n            fetch(api_route, requestMetadata)\n            .then(response => response.json())\n                .then(result => {\n                  var keywords = [];\n                  for(var i = 0; i < result.length; i++ ){\n                    keywords.push(result[i].Word)\n                  } \n                  this.setState({keywords: keywords})              \n                })\n      }\n    getNotificationCount(){\n        if(Cookies.get(\"user\")!== undefined) {\n        var user = JSON.parse(Cookies.get(\"user\"));\n        const api_route = 'https://degreeme.io/API/GetUnreadCount/'+user._id;\n        const requestMetadata = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        };\n        fetch(api_route, requestMetadata)\n        .then(res => res.json())\n        .then((result)=>{\n            if(result > 0){\n                if(result <= 9){\n                    this.setState({showNotificationBadge: \"block\", notificationCount: result })\n                }\n                else {\n                    this.setState({showNotificationBadge: \"block\", notificationCount: \"9+\" })\n                }\n            }\n            else{\n                this.setState({showNotificationBadge: \"none\", notificationCount: result})\n            }\n        })\n        .catch((err)=>{\n        });\n    }\n    }\n    getNotifications(){\n        if(Cookies.get(\"user\")!== undefined) {\n        var user = JSON.parse(Cookies.get(\"user\"));\n            const api_route = 'https://degreeme.io/API/GetNotifications/'+user._id;\n            const requestMetadata = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            };\n            fetch(api_route, requestMetadata)\n            .then(res => res.json())\n            .then((result)=>{\n                this.setState({notifications: result})\n            })\n            .catch((err)=>{\n            });\n        }\n    }\n    showUnreadCount(){\n        var unreadCount = this.state.notificationCount;\n        \n        unreadCount++;\n        if(unreadCount <= 9){\n            this.setState({showNotificationBadge: \"block\", notificationCount: unreadCount})\n\n        }\n        else {\n            this.setState({showNotificationBadge: \"block\", notificationCount: \"9+\"})\n\n        }\n    }\n    hideUnreadCount(){\n        this.setState({showNotificationBadge: \"none\", notificationCount: 0})\n    }\n    componentDidMount(){\n        if(Cookies.get(\"user\")!== undefined) {\n            this.setUser(JSON.parse(Cookies.get(\"user\")))\n            this.getNotificationCount();\n            // this.getNotifications();\n        }\n        else{\n            \n        }\n    }\n    setSearchValue(value){\n        this.setState({searchValue: value});\n    }\n    handleAutocompleteChange(e){\n        this.setState({searchValue: e.target.value});\n\n    }\n    logout(){\n        this.setState({user: {}});\n    }\n    addKeyword(){\n        //if keyword isn't empty, add it\n        if(this.keyword.current.value !== \"\"){\n          const api_route = 'https://degreeme.io/API/AddKeywords';\n          const postBody = {\n              userId: this.state.user._id,\n              word: this.keyword.current.value\n          };\n          const requestMetadata = {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(postBody),\n          };\n          fetch(api_route, requestMetadata)\n          .then(res => res.json())\n          .then((result)=>{\n            var newArray = this.state.keywords.concat(this.keyword.current.value)\n            this.setState({ keywords: newArray })\n            this.keyword.current.value = \"\";\n          })\n        }\n      }\n       //remove keyword by index\n       removeKeyword(index){\n        const api_route = 'https://degreeme.io/API/RemoveKeyword';\n        const postBody = {\n            userId: this.state.user._id,\n            word: this.state.keywords[index]\n        };\n        const requestMetadata = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postBody),\n        };\n        fetch(api_route, requestMetadata)\n        .then(res => res.json())\n        .then((result)=>{\n          const newArray = this.state.keywords\n          newArray.splice(index,1)\n          this.setState({keywords: newArray});\n        })\n        \n      }\n    isUserLoggedIn(){\n        if(this.state.user !== undefined){\n            \n        }\n    }\n    render() {\n        return (\n        <Router>\n            <Header user={this.state.user} setUser={this.setUser} logout={this.logout} \n            notifications={this.state.notifications} getNotifications={this.getNotifications}\n            showNotificationBadge={this.state.showNotificationBadge}\n            hideUnreadCount={this.hideUnreadCount}\n            notificationCount={this.state.notificationCount}\n            searchValue={this.state.searchValue}\n            setSearchValue={this.setSearchValue}\n            handleAutocompleteChange={this.handleAutocompleteChange}\n          />\n        <Switch>\n          <Route exact path=\"/\">\n              <Redirect to=\"/LandingPage\" />\n            </Route>\n            <Route exact path=\"/Home\" render={props => \n            (<Home {...props} user={this.state.user} />)} />\n           <Route exact path=\"/LandingPage\" render={props => \n            (<LandingPage {...props} />)} />\n             <Route exact path=\"/ResetPassword\" render={props => \n            (<ForgotPassword {...props} />)} />\n            <Route exact path=\"/Upload\" render={props => \n            (<VideoUploader {...props} user={this.state.user} setUser={this.setUser} />)} />\n            <Route exact path=\"/Login\" render={props => \n            (<Login {...props} user={this.state.user} setUser={this.setUser} getUnreadCount={this.getNotificationCount}\n            />)} />\n            <Route exact path=\"/UpdatePassword/:id\" render={props => \n            (<UpdatePassword {...props} \n            />)} />\n            {/* <Route exact path=\"/CreateAccount\" component={CreateAccount} /> */}\n            <Route exact path=\"/CreateAccount\" render={props => \n            (<CreateAccount {...props}\n            getKeyWords = {this.getKeyWords} addKeyWord={this.addKeyword} removeKeyword={this.removeKeyword}\n            keyword={this.keyword} keywords = {this.state.keywords}/>)} />\n            <Route exact path=\"/Video/:id\" render={props => \n            (<SingleVideo {...props} user={this.state.user} \n            showUnreadCount={this.showUnreadCount} setUser={this.setUser}/>)} />\n            <Route exact path=\"/User/:id\" render={props => \n            (<User {...props} user={this.state.user}  />)} />\n            <Route exact path=\"/Settings\" render={props => \n            (<Settings {...props} user={this.state.user}\n            setUser={this.setUser} getKeywords = {this.getKeywords} \n            addKeyword={this.addKeyword} removeKeyword={this.removeKeyword}\n            keyword={this.keyword} keywords = {this.state.keywords}/>)} />\n             <Route exact path=\"/CreateSellerAccount\" render={props => \n            (<CreateSellerAccount {...props} setUser={this.setUser} />)} />\n            <Route exact path=\"/Upgrade\" render={props => \n            (<UpgradeAccount {...props} user={this.state.user}\n                setUser={this.setUser} />)} />\n         <Route exact path=\"/PaymentSettings/:id\" render={props => \n            (<PaymentSettings {...props} user={this.state.user}\n                setUser={this.setUser} />)} />\n            <Route exact path=\"/SearchResults/:id\" render={props => \n            (<SearchResults {...props} searchValue={this.state.searchValue}\n            setSearchValue={this.setSearchValue}/>)} />\n            <Route exact path=\"/LikedVideos\" render={props => \n            (<LikedVideos {...props} user={this.state.user} />)} />\n            \n             <Route\n                exact\n                path=\"/:id\"\n                render= {props => (\n                    <Redirect to={`SearchResults/${this.state.searchValue}`} />\n                )}/>\n\n        </Switch>\n        <Footer />\n      </Router>\n        );\n    }\n}\n\nexport default Routes;","import './App.css';\n// import { AppContext } from \"./libs/contextLib\";\nimport React from \"react\";\nimport Routes from './components/Routes'\n\nfunction App() {\n\n  return (\n\n    <div className=\"App\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      {/* <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}> */}\n      <Routes/>\n          \n      {/* </AppContext.Provider> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}